#########################################################################################################################################################################################################
## DAT file for use with SPASAM/SILC OPERATING MODEL (OM) TIM_OM.tpl
## This model can be used by itself to simulate various population structures/dynamics and/or search for F_MSY
## OR the resulting .rep file can be read directly into the associated TIM_EM.tpl estimation model (EM) as a .dat file through an R wrapper
## NOTE: there are some estimation difficulties due to limitations with ragged arrays in ADMB, so if running an EM then read following README carefully to avoid inadvertent misspecification
#####################################################################################################################################################################################################

#***************************************************************************************************************************************************************************************************
# IMPORTANT README FOR DEVELOPING ESTIMATION MODELS TO AVOID INADVERTENT MISSPECIFICATION
#***************************************************************************************************************************************************************************************************

#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
# NOTE: As currently formulated the Beverton-Holt stock-recruit relationship does not address spatial dynamics (i.e., movement is not accounted for in the calculation of SSB0)
#       Thus, this formulation is not necessarily correct, but no adequate method can account for movement in spatial models (see documentation for Projection 2-Box (Porch, 2018) for further discussions and alternate approaches
#       The current approach assumes that all recruitment is based on productivity of only the local stock, this approximation is likely adequate for most theoretical/simulation applications (when OM and EM SRR methods make same assumptions)
#       Spatial reference points and SRR are an active area of research and should be a priority for future spatial models
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#####################################################################################################################################################################################################
# The following parameters have limitations on the axis over which they can estimate variation
# Mainly, certain estimated parameters, by necessity of ADMB issues with estimated (or lack thereof) ragged arrays, which preclude differing number of regions per population or fleets per region
#####################################################################################################################################################################################################

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# TO BE SAFE, IF RUNNING EMs, THEN OM AND EM SHOULD BE PARAMETRIZED TO HAVE THE SAME NUMBER OF REGIONS IN EVERY POPULATION AND THE SAME NUMBER OF FLEETS IN EVERY REGION/POPULATION
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
# NOTE: For each parameter listed below the estimated parameter array has dimensions equal to number of regions or fleets in the first population/region
#       IF number of regions or fleets differ in other populations or regions, then EM will likely crash when trying to assign estimated parameters to associated arrays
#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

######################################################################################################################################################################################################
# The following parameters are limited for estimation purposes:
# RECRUIT APPORTIONMENT (ln_rec_prop_CNST, ln_rec_prop_YR): region; must have consistent number of regions in each population (or only a single population)
# INITIAL ABUNDANCE DISTRIBUTION (ln_reg): region; must have consistent number of regions in each population (or only a single population); various parametrizations if est ln_reg then must be constant number of regions across pops
# FISHING MORTALITY (ln_F): fishing fleet; must have consistentent number of fishing fleets in all populations+regions of model (currently OM and EM are setup to not allow differing fleets across regions, nfleets is set by each population) 
# FISHING SELECTIVITY (log_sel_beta1/2/3/4): fishing fleet; must have consistentent number of fishing fleets in all populations+regions of model (currently OM and EM are setup to not allow differing fleets across regions, nfleets is set by each population) 
#**************** NOTE that all surveys are assumed to have constant parameters (q+selectivity) across a population in the EM***********************
# SURVEY CATCHABILITY (ln_q): region+survey fleet; only estimated by population and survey fleet (assumed constant across regions); must have constant number of survey fleets across all populations+regions
# SURVEY SELECTIVITY (log_sel_beta1/2/3/4surv): region+survey fleet; only estimated by population and survey fleet (assumed constant across regions); must have constant number of survey fleets across all populations+regions
#******************************************************************************************************************************************
# NATURAL MORTALITY (ln_M_CNST, ln_M_pop_CNST, ln_M_age_CNST, ln_M_pop_age): region; various parametrizations available, but cannot be estimated by region
# TAG REPORTING RATE (ln_reg): region; must have consistent number of regions in each population (or only a single population)
#############################################################################################################################################################################################################

################################################################################################################################################################
# NOTE: Following references outline model framework, highlighting various model structure and parametrizations
#** Examples of how the reference point models and mismatches in population structure can be implemented can be found in Goethel and Berger (2017); https://cdnsciencepub.com/doi/10.1139/cjfas-2016-0290
#** Examples of how the reference point models can be implemented to allocate panmictic TAC to areas can be found in Bosley et al. (2019); https://www.sciencedirect.com/science/article/abs/pii/S0165783619301997?via%3Dihub
#** Examples of how different movement scenarios can be implemented in OM/EM can be found in Goethel et al. (2020); https://onlinelibrary.wiley.com/doi/full/10.1111/faf.12510
#** Examples of how different tagging scenarios can be implemented can be found in Goethel et al. (2019); https://www.sciencedirect.com/science/article/pii/S0165783619301675
#** Examples of how different population structures can be implemented can be found in Bosley et al. (2021); TBD
###############################################################################################################################################################


##############################################################################################################################
############## OM Parameter Estimation Phases ##### #########################################################################
#############################################################################################################################

#phase_F
  # phase for estimating F
  # must be turned on (==1) if F_type==3 AND MSY_model_type_switch==3 (performing F_MSY search)
-1

#F_guess
  # starting value for F search
-3

#phase_dummy
  # phase for dummy parameter in the OM, used when OM does no estimation (i.e., all phases<0) because ADMB must have at least 1 active parameter to run
  # DEFAULT: set ==1 because not actually estimating any parameters in OM
  # must be turned on (==1) if F_type!=3
  # must be turned off (==(-1)) if F_type=3
1

#ph_dummy_EM
  # phase for dummy parameter for the EM, used when EM does no actual estimation (i.e., all phases<0) because ADMB must have at least 1 active parameter to run
  # DEFAULT: set ==(-1) because EM will be estimating parameters so dummy variable unnecessary
-1

##############################################################################################################################
############## OM Model Structure Inputs #####################################################################################
##############################################################################################################################

#OM_structure
  # Determines the overarching population structure assumed in the operating model (OM)
  #==0 the OM is panmictic (1 area well mixed)
  #==1 the OM is metamictic (spatial heterogeneity, one population with multiple regions)
  #==2 the OM is metapop (multiple subpopulations with unique demographics/vital rates, but reproductive mixing such that fish immediately mix when change location and take on characteristics of new population)
  #==3 the OM is natal homing/overlap/home fidelity (vital rates are based on natal population; all spawners can return to spawn or only fraction...based on input overlap parameters)
2

#natal homing switch
  # determines how SSB is tallied (i.e., follow natal homing assumption that fish must return to natal population to add to SSB), mainly check on OM_structure setting
  #==0 no natal homing, use if OM_structure!=3 (SSB is sum of SSB in population regardless of natal origin; weight/mat/fecund/ are based on current population not natal population)
  #==1 do natal homing, use if OM_structure==3 (a fish only adds to SSB if it is in its natal population at spawning time; weight/mat/fecund/ are based on natal population)
     # natal homing assumes genetic based life history and contribution to SSB (i.e., natal homing and no demographic mixing), natal_homing_switch==0 assumes demographic mixing (e.g. metapopulations where life history is more location based)
0

#spawn_return_switch
  # determines whether an instantaneous return spawning migration to natal population occurs IF natal_homing_switch==1 (i.e., when OM_structure==3 and natal homing assumed)
  #==0 if natal_homing_switch==1, then ONLY fish that are currently in natal population at time of spawning add to SSB
  #==1 if natal_homing_switch==1, then a fraction of fish return to natal population to spawn (instantaneous migration to natal population and back at time of spawning) based on spawn_return_prob; weight/mat/fecund/ are based on natal population
0

#nages
 # number of ages in the model (terminal age is a plus group)
8

#nyrs
  # number of years in the model
  # NOTE: for reference point sims, MSY_model_type_switch>0,  (e.g., F_MSY search), should set this sufficiently high (>100) to approximate equilibrium
30

#npopulations
  # number of populations
  # NOTE: if OM_structure==0, npops should ==1
  # NOTE: if OM_structure==1 (spatial heterogeneity), npops typically ==1 (but could have multiple populations with no movement among pops; typically would just use metapop structure though)
  # NOTE: if OM_structure>1 (natal homing or metapopulation), npops should >1, otherwise have either panmictic or spatial heterogeneity
2

#nregions (1,np)
  # number of regions per population
  # SEE README IN DAT FOR POTENTIAL MISSPECIFICATION OF EM IF DIFFERING NUMBER OF REGIONS IN EACH POPULATION
  # NOTE: if OM_structure==0, nregs should ==1 (otherwise have spatial heterogeneity)
  # NOTE: if OM_structure==1 (spatial heterogeneity), nregs should be >1, otherwise have panmictic
  # NOTE: if OM_structure>1 (natal homing or metapopulation), nregs can be =>1
  # Dim: 1 to # populations
1
1

#nfleets (1,np)
  # number of fishing fleets in each region for each population
  # SEE README IN DAT FOR POTENTIAL MISSPECIFICATION OF EM IF DIFFERING NUMBER OF FLEETS IN EACH POPULATION
  # Dim: 1 to # populations
1
1

#nfleets_survey (1,np)
  # number of survey fleets in each region for each population
  # SEE README IN DAT FOR POTENTIAL MISSPECIFICATION OF EM IF DIFFERING NUMBER OF FLEETS IN EACH POPULATION
  # Dim: 1 to # populations
1
1

##############################################################################################################################
############## INDICES FOR Random Number Generators #########################################################################
#############################################################################################################################

  # use these to input the MAX values across ALL runs/scenarios for a simulation experiment so that always have consistent RNG values
  # ie these may be greater than the actual dimensions above for any given run, if the sim experiment is exploring variation in model/population structure
  # by using MAX value across all sim scenarios, ensures that associated error/stochasticity in parameter values or observed data is the same for that pop/reg/fleet/age/data source across all runs/scenarios
  # ie, data/parameters in pop 2, reg 2 will always have same set of RNGs, but reg 3 will be different from reg 2 (even though there may not be a reg 2 in this sim scenario)
  # just a way to ensure consistentcy across sim scenarios/runs
  
#max_pops
  #>=npops
2
#max_regs
  #>=nregions
1
#max_ages
  #>=nages
8
#max_yrs
  #>=nyrs
30
#max_flts
  #>=nfleets
1

#max_surv_flts
  #>=nfleets_survey
1

#max_tag_yrs
  #>=nyrs_release (defined below)
30

##############################################################################################################################
############## OM Model Structure Switches ##################################################################################
#############################################################################################################################

#larval_move_switch
  # sets how movement is treated for age-0 (larval) fish
  #==(-1) larval (pre-age-1) movement is determined same as other ages (e.g., by move_switch)
  #==0 no movement
  #==1 input movement
  #==2 movement within stock only based on input residency (symmetric)
  #==3 symmetric movement but only allow movement within a population (ie regions within a population) not across populations
  #==4 symmetric movement across all populations and regions
  #==5 allow movement across all regions and populations, based on population/region specific input residency (symmetric off diagonal)
  #==6 movement based on input IBM connectivity matrices  
1

#first_post_settle_move_switch
  # allows different movement patterns for newly settled fish up until age_first_move
  # model assumes no movement until age_first_move
  #==(-1) first movement is determined in same way as other ages (e.g., based on move_switch) 
  #==0 no movement
  #==1 input first movement rates using first_move_input
  #==2 return to natal population based on first_return parameter (proportion of fish that return during first post-settlement movement)
-1

#move_switch
  # Sets the type of adult movement pattern (sets age class>0 movements)
  #==0 no movement
  #==1 input age-based movement
  #==2 movement within population only (e.g., among regions within population), based on input residency (symmetric off diagonal)
  #==3 symmetric movement but only allow movement within a population (ie regions within a population) not across populations
  #==4 symmetric movement across all populations and regions
  #==5 allow movement across all regions and populations, based on population/region specific input residency term (symmetric off diagonal)
  #==6 natal return (for natal_homing_switch==1 ONLY), no movement of fish until return_age when a certain fraction, return_probability, of fish make return migration to natal population (eg, an ontogenetic migration); all fish remain in given population for remainder of lifepsan after return_age
  #==7 larvae stay in the population that they settle in (i.e., for natal homing/overlap, do not return to natal population)
        # if adult movement==0 for natal homing would return to natal population because natal residency is 100% and use natal movement rates (not current population movement rates like with metapopulation/random movement)
  #==8 density dependent movement based on relative biomass among potential destination population/regions, partitions (1-input_residency) based on a logistic function of biomass in current population/region and 'suitability' of destination population/regions
        # uses use_input_Bstar switch
        # DD MOVEMENT CAN BE AGE BASED OR CONSTANT ACROSS AGES...FOR AGE BASED MAKE SURE DD_move_age_switch==1, FOR AGE-INVARIANT DD_move_age_switch==0
  #==9 use input T_year to allow T to vary by year
  #==10 use T_FULL_Input to input time and age varying T
  ################################################################################################################################################################
  #** Examples of how different movement scenarios can be used can be found in Goethel et al. (2020); https://onlinelibrary.wiley.com/doi/full/10.1111/faf.12510
  ###############################################################################################################################################################
8

#rand_move_larval
  # adjust movement to include random variation based on input sigma and lognormal random variable (by year and age)
  # if larval_move_switch set 0 (no move), then rand_move is bypassed
  #==0 no randomness, just use movement
  #==1 add randomness (bounded so Fract move cannot exceed 1 or go below 0)
1

#rand_move
  # adjust movement to include random variation based on input sigma and lognormal random variable (by year and age)
  # if  move_switch set 0 (no move), then rand_move is bypassed
  #==0 no randomness, just use movement
  #==1 add randomness (bounded so Fract move cannot exceed 1 or go below 0)
1

#DD_move_age_switch
  # Allow age-based movement when using DD movement (Y/N)
  #==0 no age-based DD movement (assumes movement based on total biomass relative to Bstar) 
  #==1 DD movement is age-based (assumes movement based on age-specfic biomass relative to age-specific Bstar)
1

#use_input_Bstar
  #==0 set Bstar for DD movement equal to SSB_zero*SSB_zero_appor  #######NOT FULLY IMPLEMENTED YET##########
     # (if nreg==1, Bstar=SSB0), **NOTE** for Rec_type!=2 (not BH), defaults to using input_Bstar since no SSB0 calcs are done 
  #==1 use input_Bstar
     # This will be typical approach for implementing DD movement since SSB0 calcs are not well defined for spatial models
1

#select_switch
  # determine how fishery selectivity is simulated
  #==0 input selectivity
  #==1 logistic selectivity based on input sel_beta1 and sel_beta2
  #==2 double logistic selectivity based on input sel_beta1, sel_beta2,sel_beta3,sel_beta4  //NOT TESTED YET
1

#select_switch_survey
  # determine how survey selectivity is simulated
  #==0 input selectivity
  #==1 logistic selectivity based on input sel_beta1 and sel_beta2
  #==2 double logistic selectivity based on input sel_beta1, sel_beta2,sel_beta3,sel_beta4  //NOT TESTED YET
1

#F_switch
  # determine how F is simulated
  #==1 input_F by pop, reg, fleets
  #==2 input_F_MSY
  #==3 Estimate F_MSY
  #==4 input_F_const is split evenly among populations (each fleet uses population F)
  #==5 input_F_const is is split evenly among all regions (each fleet uses region F)
  #==6 input_F_const is split evenly among fleets
  #==7 F devs about input_F based on sigma_F
  #==8 random walk in F starting from input_F  ....HAS NOT BEEN FULLY IMPLEMENTED OR TESTED
  #==9 dunce cap F with random devs; F increases to a peak half way through time series then decrease back to min over remainder of time series
9

#init_abund_switch
  # determines how the abundance is calculated in the first year of the simulation
  #==0 input_init_abund, directly input the abundance at age by population and region
  #==1 assume an exponential decay from R_ave for each population, need to input frac_natal to determine how distributed across populations and regions
0

#maturity_switch_equil
  # MORE WORK IS NEEDED TO REFINE THESE CALCULATIONS AND DEAL WITH SPATIAL REFERENCE POITNS!
  # SSB0 must be calculated to determine stock-recruit function (if only know steepness and R0 for the population)
  # Use equilibrium SPR calcs to get SSB0, but to do so requires vital rates (maturity, weight), which are typically constant across a population
  # With multiple regions within a pop each with different vitals, must make assumption regarding the proportional contribution of each region's demograhics to equil SSB
  #==0  equal by region, assume equal (average) contributions to SSB0 by each region
  #==1 weighted average, use input equil_ssb_apportion to determine proportional contribution to equil vital rates by region
0

#SSB_type
  # units of spawning stock biomass
  #==1 fecundity based SSB
  #==2 weight based SSB
2

#Rec_type
  # determines form of Stock-recruit relationship
  #==1 stock-recruit relationship assumes an average value based on R_ave
  #==2 Beverton-Holt stock-recruit functions based on stock-specific input steepness, R0 (R_ave), M, and weight
       # NOTE: SRR DOES NOT TAKE INTO ACCOUNT SPATIAL DYNAMICS (IE, MOVEMENT AMONG POPULATIONS OR REGIONS)
  #==3 cyclical (sine wave type); HAS NOT YET BEEN TESTED
2

#recruit_devs_switch
  # determine whether recruitment deviations are incorporated
  #==0 use stock-recruit relationship directly
  #==1 allow lognormal error around SR curve (i.e., include randomness based on input sigma_recruit)
1

#recruit_randwalk_switch
  #==0 no random walk recruitment deviations (DEFAULT)
  #==1 have random walk lognormal recruitment deviations (requirs recruit_devs_switch==1)....HAS NOT BEEN FULLY IMPLEMENTED OR TESTED
0

#apportionment_type
  # determines how recruits are apportioned to regions within a population
  # because stock-recruit relationships are assumed only at the population level, if have more than 1 region in a population, must make assumption about how to apportion/assign recruits to each region
  # typically used with OM_structure==1, but also applies if nreg>1 in any pop for OM_structure==2 AND 3
  #==-1 no recruitment apportionment to regions within a stock (each region within a stock gets full amount of recruits from SR curve); WOULD NOT SUGGEST USING Because leads to sum(recruits)>SRR
  #==0 apportionment to each region is based on relative SSB in region compared to pop SSB
  #==1 input apportionment (DEFAULT for OM_structur==2 AND 3)
  #==2 recruits are apportioned equally to each region within a stock
  #==3 recruits are apportioned in a completely random manner with uniform equilibrium distribution
  #==4 recruits are apportioned stochastically with normal error surrounding the input proportions...uses the multivariate logistic random variables (Cox and Krunland 2008, FIsheries Research); SUGGESTED METHOD FOR RANDOM APPORTIONMENT
  #==5 recruits are approtioned based on theoretical enviormental phase shift....HAS NOT BEEN FULLY IMPLEMENTED OR TESTED
1

#use_stock_comp_info_survey
  # Determines whether it is assumed that info (stock composition data) is available to determine natal origin for survey age composition data
  #==0 calc OBS survey age comps by pop/area (summed across natal population); assumes no stock compisition data is available; typical for most situations when no genetic/otolith analysis is available
  #==1 calc OBS survey age comps by natal population within each area; assumes stock composition data is available
     # currently assumes that observation error is just that associated with typical observation error based on assumed distribution/CV of given data source
     # in future should incorporate observation error that mimics error more typically associated with genetic/otolith analysis
0

#use_stock_comp_info_catch
  # Determines whether it is assumed that info (stock composition data) is available to determine natal origin for catch age composition data
  #==0 calc OBS survey age comps by pop/area (summed across natal population); assumes no stock compisition data is available; typical for most situations when no genetic/otolith analysis is available
  #==1 calc OBS survey age comps by natal population within each area; assumes stock composition data is available
     # currently assumes that observation error is just that associated with typical observation error based on assumed distribution/CV of given data source
     # in future should incorporate observation error that mimics error more typically associated with genetic/otolith analysis
0

##############################################################################################################################
############## Tagging Data SWITCHES ########################################################################################
#############################################################################################################################

  ################################################################################################################################################################
  #** Examples of how different tagging scenarios can be used can be found in Goethel et al. (2019); https://www.sciencedirect.com/science/article/pii/S0165783619301675
  ###############################################################################################################################################################

#do_tag
  # determine whether to perform tagging calcs in OM
  #==0 do not calculate tagging data
  #==1 calculate tagging data
1

#number_tags_switch
   # determines how total tags are determined and how they are distributed across regions
   #==(-2) fixed tags distributed evenly,  use input_total_tags and distribute evenly across regions
   #==(-1) fixed tagging protocol distributed according to survey abundnance, use input_total tags and distribute across regions according to survey abundance
   #==0 fixed tagging protocol, use input tags by year, pop, reg
   #==1 tagging based on total abundance, total tags are based on the input fract of total abundance tagged, frac_abund_tagged, and is distributed evenly across regions
   #==2 tagging based on regional abundnace, regional tags are based on the input fract of regional abund tagged, frac_abund_tagged
   #==3 tagging based on total abundance and distributed according to regional survey biomass, tags are based on the input of total abund tagged, frac_abund_tagged, and is distributed based on survey prop of abundance in each region
   #==4 opportunitstic tagging based on target min/max tags, regional tags are randomly (uniformly) distributed based on input max and min number of tags per region
   #==5 opportunistic tagging based target min/max but with no tagging in some years AND areas, regional tags are randomly (uniformly) distributed based on input max and min number of tags per region AND prob that tagging occurs in a given year/region is based on opport_tag_prob and a uniform distributed random number
   #==6 fixed opportunistic tagging distributed by regional survey biomass but with no tagging in some years, tags are input and distributed according to regional survey abundance AND
      # prob that tagging occurs in a given year is based on opport_tag_year_prob and a uniform distributed random number (random tagging by year)
   #==7 opportunistic tagging based on min/max tags and no tagging in some years and regions, yearly tags are randomly (uniformly) distributed based on max and min number of tags per region AND
      # prob that tagging occurs in a given year is based on opport_tag_year_prob and a uniform distributed random number AND
      # prob that tagging occurs in a given region is based on opport_tag_prob and a uniform distributed random number (random tagging by area and year)      
-1

#age_dist_tags
   # determines how tags are distributed across ages
   #==0 regional tags distributed evely across all ages
   #==1 regional tags distributed according to survey proportions at age
   #==2 regional tags distributed according to regional catch proportions at age
1

#tag_fit_ages_OM
   # DOES NOT WORK WITH TAG MIXING!!!
   # determines whether OM should use same dynamics as EM when fitting tags by cohort, ie match/mismatch with tag_fit_ages_switch
   #==0, OM maintains age-based dynamics; matches EM if tag_fit_ages_switch==0
   #==1, uses only fully selected F to calculate tag recaps (use tag_age_sel to define age of full selection); matches EM if tag_fit_ages_switch==1
      #OM tag dynamics use only fully selected F (instead of maintaining age-based dynamics then summing across ages)
0

#sim_tag_mixing_switch
   # determines whether tags have a different F or T in first year of release compared to rest of population (i.e., if there is incomplete mixing)
   #==0 F and T same as rest of pop (complete mixing)
   #==1 F and/or T have are different from rest of population (incomplete mixing);
      # used in combo with sim_tag_mixing_T_switch to determine whether applies to F+T, just F, or just T
      # if sim_tag_mixing_T_switch==0, tag mixing only applies to only to F
      # if sim_tag_mixing_T_switch==1, tag mixing applies to both F and T
0

#sim_tag_mixing_T_switch
   # determines whether tags have a different T in first year of release compared to rest of population (i.e., if there is incomplete mixing)
   #==0 T same as rest of pop (complete mixing)
   #==1 T have are different from rest of population (incomplete mixing)
      # used in combo with sim_tag_mixing_switch
      # if sim_tag_mixing_switch==0, then no incomplete mixing for F or T
      # if sim_tag_mixing_switch==1, then incomplete mixing for both F AND T
0


#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#######################################################################################################################################
########################################################################################################################################
### Inputs for MSY/reference point simulations ########################################################################################
##########################################################################################################################################
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# NOTE: set MSY_model_type_switch==0 to do normal F based sims (e.g., dunce cap F) and ignore other inputs for this section
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   ############################################################################################################################################################################# 
   #*** Can use following inputs to either calculate the MSY from the system (by pop/reg) or to explore impact of implementing harvest that does not equal TRUE MSY/uMSY
   #*** To determine MSY use MSY_model_type_switch==3 AND F_switch==3 AND make sure phase_F>0, this does search algorithm to determine F that maximizes equilibrium system-wide catch
   #** Options 1 and 2 let you input a TAC or harvest rate, solve for an F that achieves it, and see resulting impact on yield, Bio, etc...
   #** Can also use to test different approaches for spatial catch allocation (e.g., based on survey biomass, equal) 
   #** Mainly useful for inputting MSY values from incorrect assumptions regarding pop structure or movement 
   #** NOTE: should use an appropriately long time frame for sims (e.g., >100 years) to approximate equilibrium 
   #** NOTE: these methods have not been tested with time-varying movement so equilibrium may not be feasible
   ################################################################################################################################################
   #** Examples of how the reference point models and mismatches in population structure can be used can be found in Goethel and Berger (2017); https://cdnsciencepub.com/doi/10.1139/cjfas-2016-0290
   #** Examples of how the reference point models can be used to allocate panmictic TAC to areas can be found in Bosley et al. (2019); https://www.sciencedirect.com/science/article/abs/pii/S0165783619301997?via%3Dihub
   ###################################################################################################################################

#MSY_model_type_switch
  #==0 do not use TAC to set F (i.e., do normal simulation without MSY calcs)
  #==1 use TAC to set F, USE THIS IF calc_TAC_from_uMSY==1
  #==2 use uMSY to set F, USE THIS IF WANT TO CALC MSY
  #==3 solve for MSY (i.e., max yield from entire system based on pop specific Fs)
0

#nyrs_quasi_equil
  #number of years over which to average yield to determine 'equilibrium' yield when estimating FMSY (used when MSY_model_type_switch==3)
10

#F_max
  #max F allowed in FMSY search
5

 #//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 #//##############################################################################
 #//##############################################################################
 #//### Following used when model type>0 and <3 (i.e., for reference point simulations ###################################################
 #//###########################################################################
 #//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

# parse_TAC
  # method for allocating the TAC to population/region
  # NOTE: IF PARSE input_u directly, when MSY_model_type_switch==2, (instead of basing TAC on u*bio and then allocating TAC; MSY_model_type_switch==1), then sum(u) unlikely to equal input_u because of differences in population sizes (ie, applying less than the full uMSY to each area/region)
  #==0 do not alter the input TAC or harvest rate
  #==1 use observed data source to parse TAC or harvest rate (used when allocating harvest but pop structure unknown; eg, Bosley et al. (2017))
0

 #calc_TAC_from_uMSY
  # determines how TAC is determined when MSY_model_type_switch==1
  #==0 just use input TAC, do not calculate TAC from input harvest rate
  #==1 calculate TAC based on input_u and population biomass; uMSY(input)*biomass_population(j,y) to get a yearly TAC that obtains MSY in equil without crashing the stock
  #==2 calculate TAC based on input_u and regional biomass;  uMSY(input)*biomass_region(j,r,y) to get a yearly TAC that obtains MSY in equil without crashing the stock
     # if there are regions within populations and want to match true MSY, then need to set ==2 otherwise will be based on the total pop bio and TAC will be >MSY
0

#parse_TAC_source
  # if allocating the TAC or harvest rate (parse_TAC==1), then this determines data source to use for parsing to population/region
  #==0 use recruitment index_BM, assume index occurs at tspawn so always have 1 year timelag in using rec index to parse TAC, use equal allocation in first year (no data)
  #==1 use recruitment index_AM, assume index occurs at tspawn so always have 1 year timelag in using rec index to parse TAC, use equal allocation in first year (no data)
  #==2 use survey biomass, if tsurvey==0 can use survey in current year or assume timelag; use equal allocation if year<timelag (no data)
  #==3 use equal apportionment across all fleets in a given region
2

#TAC_survey_parse_timelag_switch
  # if parse_TAC_source==2, determine whether or not to implement a timelag in availability of survey data
  #==0 no timelag, use survey apportionment in current year (if tsurvey==0) or previous year (if tsurvey>0) (ie inherent lag if survey not at beginning of year)
  #==1 use timelag, use survey apportionment from y-TAC_survey_parse_timelag, assume equal apportionment of TAC among fleets in  years where y<timelag
0

#TAC_survey_parse_timelag
  # whole number value timelag in years for use with survey apportionment
  # NOTE: only used if parse_TAC_source==2 AND TAC_survey_parse_timelag_switch==1
1

 #//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 #//##############################################################################
 #//##### End reference point inputs
 #//##############################################################################
 #//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#///////////////////////////////////////////////////////////////////////////////
#//////// ADDITIONAL OM PARAMETERS ######### //////////////////////////////////
#///////////////////////////////////////////////////////////////////////////////

##############################################################################################################################
############## Tagging Data Parameter Inputs ################################################################################
#############################################################################################################################

#nyrs_release
  # number of years with tag release events
  # NOTE: IF WANT A ONE TIME RELEASE EVENT NEED TO USE DUMMY RELEASE EVENTS (ie, 0 tags released) for at least 1 other years TO AVOID ERRORS IN MAKING ARRAYS (i.e., 1-dim arrays cause errors)
        # EM automatically gives release events with 0 releases no weight so won't fit the dummy release events
7

#yrs_releases (1,nyrs_release)
  # vector containing the model years with tag releases
  # Dim: 1 to nyrs_release
1
5
10
15
20
25
30

#input_ntags (1,np,1,nreg,1,ny_rel)
  # input number of tag releases by region and year
2000 2000 2000 2000 2000 2000 2000
2000 2000 2000 2000 2000 2000 2000

#input_total_tags (1,nyr_rel)
  # input total tag releases across entire domain by year
5000 5000 5000 5000 5000 5000 5000

#frac_total_abund_tagged (1,nyr_rel)
  # proportion of total abundance that is tagged in each release year
0.15
0.15
0.15
0.15
0.15
0.15
0.15

#max_tags (1,np,1,nreg)
 # maximum tags for uniform distribution if tags_switch==4 or 5
3000
3000

#min_tags (1,np,1,nreg)
 # minimum tags for uniform distribution if tags_switch==4 or 5
1000
1000

#opport_tag_prob
 # cutoff value defining whether uniform RNG represents no tagging(<tag_prob) or tagging (>tag_prob) in a given AREA in a given year
0.35

#opport_tag_year_prob
 # cutoff value defining whether uniform RNG represents no tagging(<tag_prob) or tagging (>tag_prob) in a given YEAR
0.5

#max_life_tags
  # number of years that tag recaptures will be tallied for after release (assume proportional to longevity of the species)...use this to avoid calculating tag recaptures for all remaining model years after release since # recaptures are often extremely limited after a few years after release
5

#age_full_selection
  # age used to compute tag dynamics (F and T) when fitting by region cohort (not age cohort) and OM tag dynamics match EM
8

#report_rate(1,np,1,ny_rel,1,nreg)
  # tag reporting rate (assume constant for all recaptures within a given release cohort, but can be variable across populations or regions)
  # FUTURE:  allow variation across fleets instead
0.7
0.7
0.7
0.7
0.7
0.7
0.7
0.8
0.8
0.8
0.8
0.8
0.8
0.8

#F_tag_scalar (1,ny_rel)
 # scalar applied to F when incomplete tag mixing assumed (MUST BE >= 0)
 # NOTE: EM can only estimate scalar between 0 and 1 (F tag<F), so values >1 lead to inherent bias in EM
0.75
0.72
0.79
0.74
0.78
0.77
0.73

#T_tag_res (1, ny_rel)
 # The residency rate for tagged fish in year of release, movement rates are equal to (1-T_tag_res)/sum(nregions) OR the scalar determined by the DD parameters if DD movement turned on
0.97
0.99
0.93
0.96
0.98
0.95
0.94

#############################################################################################################################################
######################### Movement Parameter Inputs #########################################################################################
#############################################################################################################################################

#sigma_T (1,np)
 # variance term for random movement if rand_move==1
0.3
0.3

############## First Movement Parameters ################################################################
# age_first_move (1,np)
  # age at which first post-settlement movement occurs
1
1

##############################################################################################################################
############## Density Dependent Movement Parameter Inputs ###################################################################
#############################################################################################################################

# NOTE: FOLLOWING ARE USED WITH move_switch==8

#input_Bstar(1,np,1,nreg,1,nages)
  # carrying capacity biomass term, summed value across ages is used for age-invariant DD movement
400	900	1100	1200	1400	1800	1250	700
600	800	1000	1200	1500	2000	1000	900

#SSB_zero_appor(1,np,1,nreg)
  # determines apportionment of SSB0 when multiple regions and use_input_Bstar==0
  # NOT CURRENTLY IMPLEMENTED
0.6
0.4

#A (1,np,1,nreg,1,na)
  # logistic parameter for DD movement
  # for age-invariant movement MAKE SURE THESE ARE CONSTANT ACROSS AGES
12 12 12 12 12 12 12 12
5 5 5 5 5 5 5 5

# DD_residency (1,np,1,nreg,1,na)
  # residency term for DD movement
  # for age-invariant movement MAKE SURE THESE ARE CONSTANT ACROSS AGES
0.95 0.87 0.75 0.8 0.7 0.85 0.75 0.9
0.9 0.85 0.7 0.75 0.8 0.9 0.75 0.8

##############################################################################################################################
############## Overlap/Natal Homing Movement Inputs #########################################################################
#############################################################################################################################

# NOTE: FOLLOWING ARE USED WITH natal_homing_switch==1 AND move_switch==6 OR spawn_return_switch==1

#return_age
  # age of return migration for move_switch==6
7

#return_probability (1,np)
  # probability of returning for move_switch==6
1
1

#spawn_return_prob (1,np)
  # probability of returning for spawning if spawn_return_switch==1
1
1

#############################################################################################################################################
######################### Movement and Residency Inputs #########################################################################################
#############################################################################################################################################

#input_residency_larval (1,np,1,nreg)
  # larval residency term
  # used for larval_move_switch==2 or 5
0.85
0.75

#input_residency (1,np,1,nr,1,na)
  # adult residency term
  # used for move_switch=2 or 5
0.85	0.85	0.85	0.85	0.85	0.85	0.85	0.85
0.75	0.75	0.75	0.75	0.75	0.75	0.75	0.75

#input_T (1,np,1,nreg,1,na,1,np,1,nreg)
  # input movement by age (constant across years)
  # USED with move_switch==1
  # for age-based T just vary these inputs by age
0.8	0.2
0.45	0.55
0.4	0.6
0.42	0.58
0.75	0.25
0.85	0.15
0.9	0.1
0.95	0.05	
0.05	0.95
0.08	0.92
0.06	0.94
0.03	0.97
0.3	0.7
0.4	0.6
0.5	0.5
0.4	0.6

#input_T_year (1,np,1,nreg,1,ny,1,np,1,nreg
  # input movement by year (constant across ages)
  # USED with move_switch==9
  # for yearly T just vary these inputs by year
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15

0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75

#T_Full_Input (1,np,1,nreg,1,xn,1,np,1,nreg) ... xn=na*ny;
  # input movement by year+age
  # USED with move_switch==10
  # because can't input 6darray, have to compress year*age into single index (xn), so be careful when inputting that have correct dimensions
0.95	0.05
0.87	0.13
0.75	0.25
0.8	0.2
0.7	0.3
0.85	0.15
0.75	0.25
0.9	0.1
0.95137931	0.04862069
0.872758621	0.127241379
0.755172414	0.244827586
0.804482759	0.195517241
0.705862069	0.294137931
0.854137931	0.145862069
0.756206897	0.243793103
0.902413793	0.097586207
0.952758621	0.047241379
0.875517241	0.124482759
0.760344828	0.239655172
0.808965517	0.191034483
0.711724138	0.288275862
0.858275862	0.141724138
0.762413793	0.237586207
0.904827586	0.095172414
0.954137931	0.045862069
0.878275862	0.121724138
0.765517241	0.234482759
0.813448276	0.186551724
0.717586207	0.282413793
0.862413793	0.137586207
0.76862069	0.23137931
0.907241379	0.092758621
0.955517241	0.044482759
0.881034483	0.118965517
0.770689655	0.229310345
0.817931034	0.182068966
0.723448276	0.276551724
0.866551724	0.133448276
0.774827586	0.225172414
0.909655172	0.090344828
0.956896552	0.043103448
0.883793103	0.116206897
0.775862069	0.224137931
0.822413793	0.177586207
0.729310345	0.270689655
0.870689655	0.129310345
0.781034483	0.218965517
0.912068966	0.087931034
0.958275862	0.041724138
0.886551724	0.113448276
0.781034483	0.218965517
0.826896552	0.173103448
0.735172414	0.264827586
0.874827586	0.125172414
0.787241379	0.212758621
0.914482759	0.085517241
0.959655172	0.040344828
0.889310345	0.110689655
0.786206897	0.213793103
0.83137931	0.16862069
0.741034483	0.258965517
0.878965517	0.121034483
0.793448276	0.206551724
0.916896552	0.083103448
0.961034483	0.038965517
0.892068966	0.107931034
0.79137931	0.20862069
0.835862069	0.164137931
0.746896552	0.253103448
0.883103448	0.116896552
0.799655172	0.200344828
0.919310345	0.080689655
0.962413793	0.037586207
0.894827586	0.105172414
0.796551724	0.203448276
0.840344828	0.159655172
0.752758621	0.247241379
0.887241379	0.112758621
0.805862069	0.194137931
0.921724138	0.078275862
0.963793103	0.036206897
0.897586207	0.102413793
0.801724138	0.198275862
0.844827586	0.155172414
0.75862069	0.24137931
0.89137931	0.10862069
0.812068966	0.187931034
0.924137931	0.075862069
0.965172414	0.034827586
0.900344828	0.099655172
0.806896552	0.193103448
0.849310345	0.150689655
0.764482759	0.235517241
0.895517241	0.104482759
0.818275862	0.181724138
0.926551724	0.073448276
0.966551724	0.033448276
0.903103448	0.096896552
0.812068966	0.187931034
0.853793103	0.146206897
0.770344828	0.229655172
0.899655172	0.100344828
0.824482759	0.175517241
0.928965517	0.071034483
0.967931034	0.032068966
0.905862069	0.094137931
0.817241379	0.182758621
0.858275862	0.141724138
0.776206897	0.223793103
0.903793103	0.096206897
0.830689655	0.169310345
0.93137931	0.06862069
0.969310345	0.030689655
0.90862069	0.09137931
0.822413793	0.177586207
0.862758621	0.137241379
0.782068966	0.217931034
0.907931034	0.092068966
0.836896552	0.163103448
0.933793103	0.066206897
0.970689655	0.029310345
0.91137931	0.08862069
0.827586207	0.172413793
0.867241379	0.132758621
0.787931034	0.212068966
0.912068966	0.087931034
0.843103448	0.156896552
0.936206897	0.063793103
0.972068966	0.027931034
0.914137931	0.085862069
0.832758621	0.167241379
0.871724138	0.128275862
0.793793103	0.206206897
0.916206897	0.083793103
0.849310345	0.150689655
0.93862069	0.06137931
0.973448276	0.026551724
0.916896552	0.083103448
0.837931034	0.162068966
0.876206897	0.123793103
0.799655172	0.200344828
0.920344828	0.079655172
0.855517241	0.144482759
0.941034483	0.058965517
0.974827586	0.025172414
0.919655172	0.080344828
0.843103448	0.156896552
0.880689655	0.119310345
0.805517241	0.194482759
0.924482759	0.075517241
0.861724138	0.138275862
0.943448276	0.056551724
0.976206897	0.023793103
0.922413793	0.077586207
0.848275862	0.151724138
0.885172414	0.114827586
0.81137931	0.18862069
0.92862069	0.07137931
0.867931034	0.132068966
0.945862069	0.054137931
0.977586207	0.022413793
0.925172414	0.074827586
0.853448276	0.146551724
0.889655172	0.110344828
0.817241379	0.182758621
0.932758621	0.067241379
0.874137931	0.125862069
0.948275862	0.051724138
0.978965517	0.021034483
0.927931034	0.072068966
0.85862069	0.14137931
0.894137931	0.105862069
0.823103448	0.176896552
0.936896552	0.063103448
0.880344828	0.119655172
0.950689655	0.049310345
0.980344828	0.019655172
0.930689655	0.069310345
0.863793103	0.136206897
0.89862069	0.10137931
0.828965517	0.171034483
0.941034483	0.058965517
0.886551724	0.113448276
0.953103448	0.046896552
0.981724138	0.018275862
0.933448276	0.066551724
0.868965517	0.131034483
0.903103448	0.096896552
0.834827586	0.165172414
0.945172414	0.054827586
0.892758621	0.107241379
0.955517241	0.044482759
0.983103448	0.016896552
0.936206897	0.063793103
0.874137931	0.125862069
0.907586207	0.092413793
0.840689655	0.159310345
0.949310345	0.050689655
0.898965517	0.101034483
0.957931034	0.042068966
0.984482759	0.015517241
0.938965517	0.061034483
0.879310345	0.120689655
0.912068966	0.087931034
0.846551724	0.153448276
0.953448276	0.046551724
0.905172414	0.094827586
0.960344828	0.039655172
0.985862069	0.014137931
0.941724138	0.058275862
0.884482759	0.115517241
0.916551724	0.083448276
0.852413793	0.147586207
0.957586207	0.042413793
0.91137931	0.08862069
0.962758621	0.037241379
0.987241379	0.012758621
0.944482759	0.055517241
0.889655172	0.110344828
0.921034483	0.078965517
0.858275862	0.141724138
0.961724138	0.038275862
0.917586207	0.082413793
0.965172414	0.034827586
0.98862069	0.01137931
0.947241379	0.052758621
0.894827586	0.105172414
0.925517241	0.074482759
0.864137931	0.135862069
0.965862069	0.034137931
0.923793103	0.076206897
0.967586207	0.032413793
0.99	0.01
0.95	0.05
0.9	0.1
0.93	0.07
0.87	0.13
0.97	0.03
0.93	0.07
0.97	0.03
0.1	0.9
0.15	0.85
0.3	0.7
0.25	0.75
0.2	0.8
0.1	0.9
0.25	0.75
0.2	0.8
0.110344828	0.889655172
0.15862069	0.84137931
0.310344828	0.689655172
0.256896552	0.743103448
0.206896552	0.793103448
0.112068966	0.887931034
0.25862069	0.74137931
0.213793103	0.786206897
0.120689655	0.879310345
0.167241379	0.832758621
0.320689655	0.679310345
0.263793103	0.736206897
0.213793103	0.786206897
0.124137931	0.875862069
0.267241379	0.732758621
0.227586207	0.772413793
0.131034483	0.868965517
0.175862069	0.824137931
0.331034483	0.668965517
0.270689655	0.729310345
0.220689655	0.779310345
0.136206897	0.863793103
0.275862069	0.724137931
0.24137931	0.75862069
0.14137931	0.85862069
0.184482759	0.815517241
0.34137931	0.65862069
0.277586207	0.722413793
0.227586207	0.772413793
0.148275862	0.851724138
0.284482759	0.715517241
0.255172414	0.744827586
0.151724138	0.848275862
0.193103448	0.806896552
0.351724138	0.648275862
0.284482759	0.715517241
0.234482759	0.765517241
0.160344828	0.839655172
0.293103448	0.706896552
0.268965517	0.731034483
0.162068966	0.837931034
0.201724138	0.798275862
0.362068966	0.637931034
0.29137931	0.70862069
0.24137931	0.75862069
0.172413793	0.827586207
0.301724138	0.698275862
0.282758621	0.717241379
0.172413793	0.827586207
0.210344828	0.789655172
0.372413793	0.627586207
0.298275862	0.701724138
0.248275862	0.751724138
0.184482759	0.815517241
0.310344828	0.689655172
0.296551724	0.703448276
0.182758621	0.817241379
0.218965517	0.781034483
0.382758621	0.617241379
0.305172414	0.694827586
0.255172414	0.744827586
0.196551724	0.803448276
0.318965517	0.681034483
0.310344828	0.689655172
0.193103448	0.806896552
0.227586207	0.772413793
0.393103448	0.606896552
0.312068966	0.687931034
0.262068966	0.737931034
0.20862069	0.79137931
0.327586207	0.672413793
0.324137931	0.675862069
0.203448276	0.796551724
0.236206897	0.763793103
0.403448276	0.596551724
0.318965517	0.681034483
0.268965517	0.731034483
0.220689655	0.779310345
0.336206897	0.663793103
0.337931034	0.662068966
0.213793103	0.786206897
0.244827586	0.755172414
0.413793103	0.586206897
0.325862069	0.674137931
0.275862069	0.724137931
0.232758621	0.767241379
0.344827586	0.655172414
0.351724138	0.648275862
0.224137931	0.775862069
0.253448276	0.746551724
0.424137931	0.575862069
0.332758621	0.667241379
0.282758621	0.717241379
0.244827586	0.755172414
0.353448276	0.646551724
0.365517241	0.634482759
0.234482759	0.765517241
0.262068966	0.737931034
0.434482759	0.565517241
0.339655172	0.660344828
0.289655172	0.710344828
0.256896552	0.743103448
0.362068966	0.637931034
0.379310345	0.620689655
0.244827586	0.755172414
0.270689655	0.729310345
0.444827586	0.555172414
0.346551724	0.653448276
0.296551724	0.703448276
0.268965517	0.731034483
0.370689655	0.629310345
0.393103448	0.606896552
0.255172414	0.744827586
0.279310345	0.720689655
0.455172414	0.544827586
0.353448276	0.646551724
0.303448276	0.696551724
0.281034483	0.718965517
0.379310345	0.620689655
0.406896552	0.593103448
0.265517241	0.734482759
0.287931034	0.712068966
0.465517241	0.534482759
0.360344828	0.639655172
0.310344828	0.689655172
0.293103448	0.706896552
0.387931034	0.612068966
0.420689655	0.579310345
0.275862069	0.724137931
0.296551724	0.703448276
0.475862069	0.524137931
0.367241379	0.632758621
0.317241379	0.682758621
0.305172414	0.694827586
0.396551724	0.603448276
0.434482759	0.565517241
0.286206897	0.713793103
0.305172414	0.694827586
0.486206897	0.513793103
0.374137931	0.625862069
0.324137931	0.675862069
0.317241379	0.682758621
0.405172414	0.594827586
0.448275862	0.551724138
0.296551724	0.703448276
0.313793103	0.686206897
0.496551724	0.503448276
0.381034483	0.618965517
0.331034483	0.668965517
0.329310345	0.670689655
0.413793103	0.586206897
0.462068966	0.537931034
0.306896552	0.693103448
0.322413793	0.677586207
0.506896552	0.493103448
0.387931034	0.612068966
0.337931034	0.662068966
0.34137931	0.65862069
0.422413793	0.577586207
0.475862069	0.524137931
0.317241379	0.682758621
0.331034483	0.668965517
0.517241379	0.482758621
0.394827586	0.605172414
0.344827586	0.655172414
0.353448276	0.646551724
0.431034483	0.568965517
0.489655172	0.510344828
0.327586207	0.672413793
0.339655172	0.660344828
0.527586207	0.472413793
0.401724138	0.598275862
0.351724138	0.648275862
0.365517241	0.634482759
0.439655172	0.560344828
0.503448276	0.496551724
0.337931034	0.662068966
0.348275862	0.651724138
0.537931034	0.462068966
0.40862069	0.59137931
0.35862069	0.64137931
0.377586207	0.622413793
0.448275862	0.551724138
0.517241379	0.482758621
0.348275862	0.651724138
0.356896552	0.643103448
0.548275862	0.451724138
0.415517241	0.584482759
0.365517241	0.634482759
0.389655172	0.610344828
0.456896552	0.543103448
0.531034483	0.468965517
0.35862069	0.64137931
0.365517241	0.634482759
0.55862069	0.44137931
0.422413793	0.577586207
0.372413793	0.627586207
0.401724138	0.598275862
0.465517241	0.534482759
0.544827586	0.455172414
0.368965517	0.631034483
0.374137931	0.625862069
0.568965517	0.431034483
0.429310345	0.570689655
0.379310345	0.620689655
0.413793103	0.586206897
0.474137931	0.525862069
0.55862069	0.44137931
0.379310345	0.620689655
0.382758621	0.617241379
0.579310345	0.420689655
0.436206897	0.563793103
0.386206897	0.613793103
0.425862069	0.574137931
0.482758621	0.517241379
0.572413793	0.427586207
0.389655172	0.610344828
0.39137931	0.60862069
0.589655172	0.410344828
0.443103448	0.556896552
0.393103448	0.606896552
0.437931034	0.562068966
0.49137931	0.50862069
0.586206897	0.413793103
0.4	0.6
0.4	0.6
0.6	0.4
0.45	0.55
0.4	0.6
0.45	0.55
0.5	0.5
0.6	0.4

#############################################################################################################################################
######################### Recruitment Parameter Inputs #####################################################################################
#############################################################################################################################################

#tspawn (1,np)
  # time of spawning in proportion of year (0-1); 0 is Jan 1st
0
0

#steep (1,np)
  # Beverton-Holt steepness parameter
0.7
0.7

#R_ave (1,np)
  # Average Recruitment or virgin recruitment (R0) for B-H S-R curve
  # NOTE: NOT on the log scale
6000
4000

#input_Rec_prop (1,np,1,nreg)
  # recruit apportionment to each region within a population
  # used with apportionment_type==1 AND 4
  # NOTE: must sum to 1.0 across regions (and sum(input_rec_prop)==npops), otherwise will scale total recruitment from the stock-recruit curve by the sum
  # NOTE: if OM_structure!=1 AND nregions==1 (for all populations), then use apportionment_type==1, and set this to 1 for all pops
1
1

#amplitude (1,np)
  # amplitude of occilations for recritment variation when linked to environment, Use when Rec_type ==3
0.2
0.2

#freq (1,np)
  # period of oscilation for recruitment variation when linked to environment, Use when Rec_type ==3
15
15

#sigma_recruit (1,np)
  # recruitment variance term defining strength of recruitment deviations when recruit_devs_switch==1
0.55
0.5

#sigma_rec_prop (1,np)
  # recruitment apportionment variance term, used when apportionment_type==4
0.2
0.2

#############################################################################################################################################
######################### Fishing Fleet Parameter Inputs ####################################################################################
#############################################################################################################################################

#input_TAC (1,np,1,nreg,1,nfleets)
  # TAC to find associated F for using Newton-Raphson search, if MSY_model_type_switch==1 and calc_TAC_from_uMSY==0
  # NOTE: IF PARSE TAC OR U USING OBS DATA (parse_TAC==1), THEN MAKE SURE THAT FULL TAC OR U FOR THAT POP/REG IS INPUT FOR EACH FLEET HERE, because parsing the pop/reg value to fleet (if input a fleet value then resulting TAC will be lower than expected, eg, <true_MSY)
1
1

#input_u (1,np,1,nreg,1,nfleets)
  # harvest rate to find associated F for using Newton-Raphson search, if MSY_model_type_switch==2, OR if MSY_model_type_switch==1 and calc_TAC_from_uMSY>0
.0491
.0491

#max_Fnew
  # max F for Newton-Raphson search, used when MSY_model_type_switch>0 && MSY_model_type_switch<3
5

#Fnew_start
  # starting F for Newton-Raphson search, used when MSY_model_type_switch>0 && MSY_model_type_switch<3
0.1

#NR_iterations
  # number of iterations to undergo for Newton-Raphson search, used when MSY_model_type_switch>0 && MSY_model_type_switch<3
10

#NR_dev
  # step size for Newton-Raphson search, used when MSY_model_type_switch>0 && MSY_model_type_switch<3
0.001

#input_F_MSY (1,np,1,nreg,1,nfleets)
  # specify F_MSY directly to simulate MSY dynamics, used with F_switch==2
0.5
0.5

#input_F (1,np,1,nreg,1,nfleets)
  # specify F for simulations, used with F_switch==1,7,8
0.1
0.15

#input_F_const
  # specify F and split based on scenario for simulations, used with F_switch==4,5,6
0.1

# dunce_F (1,nps,1,nr,1,3)
  # dunce cap F parameters, used with F_switch==9
  # first column is start year of fishery (F before this ==0)
  # second column is  min_F
  # third column is max_F
1 0.20 0.80 0.20
1 0.25 0.90 0.20

#F_rho (1,np,1,nreg,1,nfleets)
  # degree of autocorrelation in F random walk, NOT YET TESTED
1
1

#_sigma_F (1,np,1,nreg,1,nfleets)
  # F deviations variance term, used when F_switch==7,8,9
0.3
0.35

#sel_beta1 (1,np,1,nreg,1,nfleets)
  # fishery selectivity slope parameter for logistic selectivity/double logistic, used when select_switch==1,2
1.314260271
2.448775121

#sel_beta2 (1,np,1,nreg,1,nfleets)
  # fishery selectivity inflection parameter for logistic selectivity/double logistic, used when select_switch==1,2
3.759245849
3.160453371

#sel_beta3 (1,np,1,nreg,1,nfleets)
  # fishery selectivity descending slope parameter for double selectivity, used when select_switch==2
-0.6
-0.6

#sel_beta4 (1,np,1,nreg,1,nfleets)
  # fishery selectivity descending inflection parameter for double logistic selectivity, used when select_switch==2
20
20

#input_selectivity (1,np,1,nreg,1,na,1,nf)
  # fishery selectivity by population/region/age/fleet, used when select_switch==0
0.05	0.1	0.25	.68	.95	.99	1	1
0.01	0.05	0.37	0.84	0.97	1	1	1

#############################################################################################################################################
######################### Survey Fleet Parameter Inputs ######################################################################################
#############################################################################################################################################

#******************************************************************************************************************************************************************
# NOTE: EM assumes that survey parameters (q+selectivity) are constant across regions, therefore to avoid bias make selectivity parameters constant across REGIONS
#******************************************************************************************************************************************************************

#tsurvey (1,nps,1,nreg)
  #time of survey in proportion of year (0-1); 0 is Jan 1st
0.5
0.5

#q_survey(1,nps,1,nreg,1,nfleets_survey)
  # survey catchability coefficient (abundance/biomass scalar)
  # see README note about EM estimation
  # make constant across regions to match EM estimation abilities
0.0015
0.001

##sel_beta1_survey (1,np,1,nreg,1,nfleets_survey)
  # survey selectivity slope parameter for logistic selectivity/double logistic, used when select_switch_survey==1,2
  # see README note about EM estimation
  # make constant across regions to match EM estimation abilities
2.512556283
1.81388624

#sel_beta2_survey (1,np,1,nreg,1,nfleets_survey)
  # survey selectivity inflection parameter for logistic selectivity/double logistic, used when select_switch_survey==1,2
  # see README note about EM estimation
  # make constant across regions to match EM estimation abilities
2.310794966
2.643243903

#sel_beta3_survey (1,np,1,nreg,1,nfleets_survey)
  # survey selectivity descending slope parameter for double selectivity, used when select_switch_survey==2
  # see README note about EM estimation
  # make constant across regions to match EM estimation abilities
-0.6
-0.6

#sel_beta4_survey (1,np,1,nreg,1,nfleets_survey)
  # survey selectivity descending inflection parameter for double logistic selectivity, used when select_switch_survey==2
  # see README note about EM estimation
  # make constant across regions to match EM estimation abilities
20
20

#input_survey_selectivity (1,ns,1,nreg,1,na,1,nfleets_survey)
  # survey selectivity by population/region/age/fleet, used when select_switch_survey==0
  # see README note about EM estimation
  # make constant across regions to match EM estimation abilities
0.03	0.3	0.75	0.95	1	1	1	1
0.05	0.2	0.69	0.9	1	1	1	1

#############################################################################################################################################
######################### Biological Parameter Inputs ####################################################################################################################
#############################################################################################################################################

#**************************************************************************************************************************************************************
# NOTE: FOR NATAL HOMING THERE IS NO ACCOUNTING OF REGIONAL DIFFERENCES IN VITAL RATES ACROSS REGIONS WITHIN A POPULATION
#       BECAUSE IT IS ASSUMED THAT GENETICS DEFINE VITAL RATES, WEIGHT, MATURITY, FECUNDITY ARE ALL TREATED AS CONSTANT ACROSS REGIONS WITHIN A POPULATION
#       FOR OM_structure==3, ENSURE THAT VITAL RATES ARE INPUT AS CONSTANT ACROSS REGIONS, BECAUSE NATAL REGION WILL BE IGNORED (e.g, IN SSB CALCS) 
#***************************************************************************************************************************************************************

#input_weight (1,np,1,nreg,1,na)
  # weight-at-age (typically kg)
0.4 0.75 1.5 3.0 5.0 7.0 7.5 7.7
0.5 0.65 2.0 4.0 5.5 7.2 7.9 8.3

#input_catch_weight (1,np,1,nreg,1,na)
  # catch weight-at-age, can vary from population weight-at-age, but typically same (typically kg)
0.4 0.75 1.5 3.0 5.0 7.0 7.5 7.7
0.5 0.65 2.0 4.0 5.5 7.2 7.9 8.3

#fecundity (1,np,1,nreg,1,na)
  # fecundity-at-age, used for SSB_type==1 (also uses maturity)
  # make sure to adequately input units based on kg/1000s of fish assumptions
1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1

#maturity (1,np,1,nreg,1,na)
  # proportion mature-at-age, used for SSB_type==1 AND 2 
0	0.1	0.3	0.5	0.95	1	1	1
0	0.05	0.25	0.4	0.9	1	1	1

#prop_fem (1,np,1,nreg)
  # proportion of population assumed to be female for SSB calcs (typically assume 0.5)
0.5
0.5

#############################################################################################################################################
######################### Other Demographic Parameter Inputs ################################################################################
#############################################################################################################################################

#input_M (1,np,1,na)
  # natural mortality at age
  # depending on chose parametrization in EM, could lead to misspecification if this is not constant across ages
0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2
0.25	0.25	0.25	0.25	0.25	0.25	0.25	0.25

#Equil_ssb_apportion (1,np,1,nreg) 
  #  weights given to each population for the weighted average of maturity- and weight-at-age for spawner-per-recruit (SPR) calcs when maturity_switch_equil==1
0.6
0.4

#frac_natal (1,np,1,np,1,nreg) 
  # distribution of all natal populations across populations and regions in first year, used with init_abund_switch==1
  # NOTE: first population index is natal population, second population index is all populations over which it is distributed
  # NOTE: if OM_structure!=3, then model just tracks current population (not natal population), so abundance is summed across all natal pops in current pop; this input does not matter
  # NOTE: MUST SUM TO 1.0 ACROSS A GIVEN NATAL POPULATION, regardless of OM_structure, otherwise will multiply actual size of natal pop by this scalar
1
0
0
1

#input_init_abund (1,np,1,np,1,nreg,1,na)  
  # distribution of all natal populations across populations and regions in first year, used with init_abund_switch==0
  # NOTE: first population index is natal population, second population index is all populations over which it is distributed
  # NOTE: if OM_structure!=3, then model just tracks current population (not natal population), so abundance is summed across all natal pops in current pop; just put abundance in the 'natal' pop and leave other pops/regions as 0 abundance
6000	5000	5040	4320	3000	2500	1500	1000
0	0	0	0	0	0	0	0
0	0	0	0	0	0	0	0
4000	3500	4000	3000	1250	1000	900	800

#############################################################################################################################################
######################### Observation Error Parameter Inputs ####################################################################################################################
#############################################################################################################################################

#rec_index_sigma (1,np,1,nreg)
  # variance for recruitment index lognormal observation error
0.5
0.5

#sigma_survey (1,np,1,nreg,1,nfs)
  # variance for survey biomass index lognormal observation error
0.2
0.2

#sigma_survey_overlap (1,np,1,np,1,nreg,1,nfs)
  # variance for survey biomass index when natal_homing_switch==1 (natal homing/overlap) lognormal observation error
0.2
0.2
0.2
0.2

#sigma_catch (1,np,1,nreg,1,nf)
  # variance for catch data lognormal observation error
0.05
0.05

#sigma_catch_overlap (1,np,1,np,1,nreg,1,nf)
  # variance for catch data when natal_homing_switch==1 (natal homing/overlap) lognormal observation error
0.05
0.05
0.05
0.05

#SIM_ncatch (1,np,1,nreg,1,nf)
  # multinomial effective sample size for catch age composition data
  # NOTE: cannot exceed 2000, otherwise need to change dimension of associated temp vector in parameter section
150
150

#SIM_ncatch_overlap (1,np,1,np,1,nreg,1,nf)
  # multinomial effective sample size for catch age composition data when use_stock_comp_info_survey==1 (natal homing/overlap)
  # NOTE: cannot exceed 2000, otherwise need to change dimension of associated temp vector in parameter section
150
150
150
150

#SIM_nsurvey (1,np,1,nreg,1,nfs)
  # multinomial effective sample size for survey age composition data
  # NOTE: cannot exceed 2000, otherwise need to change dimension of associated temp vector in parameter section
150
150

#SIM_nsurvey_overlap (1,np,1,np,1,nreg,1,nfs)
  # multinomial effective sample size for survey age composition data when use_stock_comp_info_survey==1 (natal homing/overlap)
  # NOTE: cannot exceed 2000, otherwise need to change dimension of associated temp vector in parameter section
150
150
150
150

#SIM_ntag (number)
  # multinomial effective sample size for tagging data
  # NOTE: assume constant across cohorts, usually set this much below actual sample size (number of tags released), otherwise observation error is much too low
200


#*******************************************************************************************************************************************************************************************************
#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
##########################################################################################################################################################################################################
#########################################################################################################################################################################################################
##########################################################################################################################################################################################################
# Estimation Model Inputs
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# These inputs define the structure of the EM, which can either match or mismatch the OM leading to misspecification along various axes (e.g., spatial structure or otherwise)
# Those values not defined for the EM explicitly here likely match the OM assumptions
# The EM has some options/functionality not explicitly incorporated in the OM (e.g., areas-as-fleets structure)
# Conversely, the OM has a lot of structure that cannot be accounted for in the EM (as noted in the README at the top of this file)
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
##########################################################################################################################################################################################################
#########################################################################################################################################################################################################
#########################################################################################################################################################################################################
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#********************************************************************************************************************************************************************************************************

#############################################################################################################################################
######################### ESTIMATION MODEL (EM) STRUCTURE INPUTS ############################################################################
#############################################################################################################################################

#EM_structure
  # define population structure in estimation model (EM) to determine level of data aggregation that needs to occur
  # mainly used when OM_structure>0 (not panmictic), but EM is panmictic (i.e., aggregating data to a single area)
  # natal_homing_switch_EM is actually main input used in EM to differentiate population structures (natal homing dynamics from all others)
  # most other specifications are implicitly based on the number of populations+regions and how the user specifies estimated parameters (e.g., estimating or not recruit apportionment)
  #==(-1) the EM is areas-as-fleets (AAF) (aka, fleets-as-areas, FAA), models each region in OM as a different fleet
  #==0 the EM is panmictic (1 area well mixed)
  #==1 the EM is metamictic (spatial heterogeneity, one population with multiple regions)
  #==2 the EM is metapop (multiple subpopulations with unique demographics/vital rates, but reproductive mixing such that fish immediately mix when change location and take on characteristics of new population)
  #==3 the EM is natal homing/overlap/home fidelity (vital rates are based on natal population; all spawners can return to spawn or only fraction...based on input overlap parameters)
     # NOTE: Although natal homing is fully implemented in both the OM and EM, it has yet to be fully vetted in the EM, so care should be taken to diagnose EM if EM_structure==3
  ###############################################################################################################################################################################   
  #** Examples of how different population structures can be implemented can be found in Bosley et al. (2021); TBD
  ###############################################################################################################################################################################
2

#natal_homing_switch_EM
  # determines how SSB is tallied (i.e., follow natal homing assumption that fish must return to natal population to add to SSB)
  #==0 no natal homing, use if EM_structure!=3 (SSB is sum of SSB in population regardless of natal origin; weight/mat/fecund/ are based on current population not natal population)
  #==1 do natal homing, use if EM_structure==3 (a fish only adds to SSB if it is in its natal population at spawning time; weight/mat/fecund/ are based on natal population)
     # natal homing assumes genetic based life history and contribution to SSB (i.e., natal homing and no demographic mixing), natal_homing_switch_EM==0 assumes demographic mixing (e.g. metapopulations where life history is more location based)
0

#spawn_return_switch_EM
  # determines whether an instantaneous return spawning migration to natal population occurs IF natal_homing_switch_EM==1 (i.e., when natal homing assumed)
  #==0 if natal_homing_switch_EM==1, then ONLY fish that are currently in natal population at time of spawning add to SSB
  #==1 if natal_homing_switch_EM==1, then a fraction of fish return to natal population to spawn (instantaneous migration to natal population and back at time of spawning) based on spawn_return_prob_EM; weight/mat/fecund/ are based on natal population
0

#npops_EM
  # number of populations in EM
  # NOTE: if EM_structure==(-1) OR 0, npops should be ==1
  # NOTE: if EM_structure==1 (spatial heterogeneity), npops typically ==1 (but could have multiple populations with no movement among pops; typically would just use metapop structure though)
  # NOTE: if EM_structure>1 (natal homing or metapopulation), npops should >1, otherwise have either panmictic or spatial heterogeneity
2

#nregions_EM (1,np_EM)
  # number of regions per population in EM
  # SEE README IN DAT FOR POTENTIAL MISSPECIFICATION OF EM IF DIFFERING NUMBER OF REGIONS IN EACH POPULATION
  # NOTE: if EM_structure==(-1) (AAF) OR 0 (panmictic), nregs should ==1 (otherwise have spatial heterogeneity)
  # NOTE: if EM_structure==1 (spatial heterogeneity), nregs should be >1, otherwise have panmictic
  # NOTE: if EM_structure>1 (natal homing or metapopulation), nregs can be =>1
  # Dim: 1 to # populations
1
1

#nfleets_EM (1,np_EM)
  # number of fishing fleets in each region for each population in EM
  # SEE README IN DAT FOR POTENTIAL MISSPECIFICATION OF EM IF DIFFERING NUMBER OF FLEETS IN EACH POPULATION
  # Dim: 1 to # populations_EM
1
1

#nfleets_survey_EM (1,np_EM)
  # number of survey fleets in each region for each population in EM
  # SEE README IN DAT FOR POTENTIAL MISSPECIFICATION OF EM IF DIFFERING NUMBER OF FLEETS IN EACH POPULATION
  # Dim: 1 to # populations_EM
1
1

#############################################################################################################################################
######################### EM Model SWITCHES ################################################################################################
#############################################################################################################################################

#diagnostics_switch
  # determines whether want to do a 'diagnostic' run without observation error (i.e., fit 'true'/expected value of each data source)
  # essentially just reports the expected value of each data source as the 'observed' value when set to TRUE(==1)
  #==0 fit data with observation error (DEFAULT)
  #==1 fit expected value (true) data (no observation error)
0

#move_switch_EM
  # Sets the EM parametrization of adult movement pattern (sets age class>0 movements)
  # NOTE: MUST CHANGE THE PHASES OF THE MOVEMENT PARAMETERS (T) TO DETERMINE TYPE OF MOVEMENT (constant, Time varying, age-varying, both time and age varying); SEE BELOW FOR DESCRIPTION
  # NOTE: IF PANMICTIC, NO MOVE, OR INPUT T, THEN  MAKE SURE ALL T PAR PHASES ARE SET TO NEGATIVE NUMBER
  #==(-2) no movement because panmictic, SET T PAR PHASES==(-1); residency set equal to 1.0 in EM (to ensure mathematical consistency in calcs)
  #==(-1) input age based movement using input_T_EM, SET T PAR PHASES==(-1); used when want fixed movement that differs from true movement
  #==0    no movement, SET T PAR PHASES==(-1); residency set equal to 1.0 in EM (to ensure mathematical consistency in calcs)
  #==1    use true movement from OM, SET T PAR PHASES==(-1)
  #==2    estimate movement, MUST SET DESIRED T PAR PHASE>0; see following for full list of movement estimation options by phase input
  #==6    natal return (for natal_homing_switch_EM==1 ONLY), no movement of fish until return_age when a certain fraction, return_probability_EM, of fish make return migration to natal population (eg, an ontogenetic migration); all fish remain in given population for remainder of lifepsan after return_age
  #==7    larvae stay in the population that they settle in (i.e., for natal homing/overlap, do not return to natal population)
          # if adult movement==0 for natal homing would return to natal population because natal residency is 100% and use natal movement rates (not current population movement rates like with metapopulation/random movement)
  ########################################################################################################################################################################
  #** Examples of how different movement parametrizations can be used can be found in Goethel et al. (2020); https://onlinelibrary.wiley.com/doi/full/10.1111/faf.12510
  #########################################################################################################################################################################
  #%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  # The Following provides a list of the movement estimation parametrizations, which are determined based on which parameter phase (ph=phase) is set to active (i.e.,>0)
  #%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  # Movement parameter phases and associated parametrization/axes of estimation for movement
  #ph_T_CNST>0,                     estimate a time+age-invariant movement rate
  #ph_T_CNST_AGE>0,                 estimate an age-varying and time-invariant movement rate
  #ph_T_CNST_AGE_no_AG1>0,          estimate an age-varying and time-invariant movement rate, but fix age-1 movement at 100% residency; may be useful when little data to estimate age-1 movement
  #ph_T_YR>0,                       estimate a yearly and age-invariant movement rate 
  #ph_T_YR_ALT_FREQ>0,              estimate a yearly and age-invariant movement rate, but with time blocks (interval width) based on T_est_freq (number of year parameters is nyrs/T_est_freq, rounded up) 
  #ph_T_YR_AGE>0,                   estimate a yearly and age-varying movement rate (i.e., a movement parameter for every year AND every age); this is likely to cause model instability given high number of freely estimated parameters
  #ph_T_YR_AGE_no_AG1>0,            estimate a yearly and age-varying movement rate, but fix age-1 movement at 100% residency; may be useful when little data to estimate age-1 movement
  #ph_T_YR_AGE_ALT_FREQ>0,          estimate an age+time-varying movement rate, but with age+time blocks (interval width) based on T_est_age_freq and T_est_freq
                                      # NOTE: number of age parameters is nages/T_age_freq, rounded up
                                      # NOTE: number of year parameters is nyrs/T_est_freq, rounded up
                                      # NOTE: can also input an age, juv_age, at/below which all Ts are set to the estimated movement rate for age-1 in that timeblock
                                      # NOTE: IF juv_age HIGHER THAN OLDEST AGE ASSOCIATED WITH 2nd AGE CLASS ESTIMATED PARAMETER THEN WILL HAVE UNUSED MOVEMENT PARAMETERS AND CONVERGENCE ISSUES (e.g., if nages==4, T_est_age_freq=2, and juv_age==4, THEN will est 2 T parameters (4/2) but age-1 T will be applied to all ages, so 2nd T parameter est but not used)
  #ph_T_YR_AGE_ALT_FREQ_no_AG1>0,   estimate an age+time-varying movement rate, but with age+time blocks (interval width) based on T_est_age_freq and T_est_freq, AND fix age-1 movement at 100% residency
                                      # NOTE: number of age parameters is (nages-1)/T_age_freq, rounded up
                                      # NOTE: number of year parameters is nyrs/T_est_freq, rounded up
                                      # NOTE: can also input an age, juv_age, at/below which all Ts are set to the estimated movement rate for age-2 in that timeblock
                                      # NOTE: IF juv_age HIGHER THAN OLDEST AGE ASSOCIATED WITH 2nd AGE CLASS ESTIMATED PARAMETER THEN WILL HAVE UNUSED MOVEMENT PARAMETERS AND CONVERGENCE ISSUES (e.g., if nages==4, T_est_age_freq=2, and juv_age==4, THEN will est 2 T parameters (4/2) but age-1 T will be applied to all ages, so 2nd T parameter est but not used)
##########################################################################################################################################################################################################################################################################################################################################################################################
2

################################################################################################################################################################################################################################################################################################################################################################################################
# NOTE: following phase parameters for movement estimation used when move_switch_EM==2
###################################################################################################################################################################################################################################################################################################################################################################################
#ph_T_CNST
  # estimate a time+age-invariant movement rate
-5

#ph_T_CNST_AGE
  # estimate an age-varying and time-invariant movement rate
-6

#ph_T_CNST_AGE_no_AG1
 # estimate an age-varying and time-invariant movement rate, but fix age-1 movement at 100% residency; may be useful when little data to estimate age-1 movement
-6

#ph_T_YR
  # estimate a yearly and age-invariant movement rate 
-5

#ph_T_YR_ALT_FREQ
 # estimate a yearly and age-invariant movement rate, but with time blocks (interval width) based on T_est_freq (number of year parameters is nyrs/T_est_freq, rounded up) 
-5

#ph_T_YR_AGE
  # estimate a yearly and age-varying movement rate (i.e., a movement parameter for every year AND every age); this is likely to cause model instability given high number of freely estimated parameters
-6

#ph_T_YR_AGE_no_AG1
  # estimate a yearly and age-varying movement rate, but fix age-1 movement at 100% residency; may be useful when little data to estimate age-1 movement
-6

#ph_T_YR_AGE_ALT_FREQ
  # estimate an age+time-varying movement rate, but with age+time blocks (interval width) based on T_est_age_freq and T_est_freq
     # NOTE: number of age parameters is nages/T_age_freq, rounded up
     # NOTE: number of year parameters is nyrs/T_est_freq, rounded up
     # NOTE: can also input an age, juv_age, at/below which all Ts are set to the estimated movement rate for age-1 in that timeblock
     # NOTE: IF juv_age HIGHER THAN OLDEST AGE ASSOCIATED WITH 2nd AGE CLASS ESTIMATED PARAMETER THEN WILL HAVE UNUSED MOVEMENT PARAMETERS AND CONVERGENCE ISSUES (e.g., if nages==4, T_est_age_freq=2, and juv_age==4, THEN will est 2 T parameters (4/2) but age-1 T will be applied to all ages, so 2nd T parameter est but not used)
5

#ph_T_YR_AGE_ALT_FREQ_no_AG1
  # estimate an age+time-varying movement rate, but with age+time blocks (interval width) based on T_est_age_freq and T_est_freq, AND fix age-1 movement at 100% residency
     # NOTE: number of age parameters is (nages-1)/T_age_freq, rounded up
     # NOTE: number of year parameters is nyrs/T_est_freq, rounded up
     # NOTE: can also input an age, juv_age, at/below which all Ts are set to the estimated movement rate for age-2 in that timeblock
     # NOTE: IF juv_age HIGHER THAN OLDEST AGE ASSOCIATED WITH 2nd AGE CLASS ESTIMATED PARAMETER THEN WILL HAVE UNUSED MOVEMENT PARAMETERS AND CONVERGENCE ISSUES (e.g., if nages==4, T_est_age_freq=2, and juv_age==4, THEN will est 2 T parameters (4/2) but age-1 T will be applied to all ages, so 2nd T parameter est but not used)
-5
#####################################################################################################################################################################################################################################################

#select_switch_EM
  # determine how fishery selectivity is estimated
  #==(-1) fix selectivity at TRUE value from OM
  #==0    input time-invariant selectivity based on input_selectivity_EM
  #==1    estimated logistic selectivity based on estimated sel_beta1 and sel_beta2 parameters; ph_sel_log must be >0 else fixed at starting values for each parameter
  #==2    estimated double logistic selectivity based on estimated sel_beta1, sel_beta2, sel_beta3, sel_beta4 parameters; ph_sel_log must be >0 AND ph_sel_dubl must be >0 else fixed at starting values for each parameter
          # NOTE: NOT TESTED YET
1

###############################################################################################################################################################################################################
#ph_sel_log
  # phase for fishery logistic OR double logistic selectivity estimation, used with select_switch_EM==1 OR 2
4

#ph_sel_dubl
  # phase for fishery double logistic selectivity estimation, used with select_switch_EM==2
-5
###############################################################################################################################################################################################################

#select_switch_survey_EM
  # determine how survey selectivity is estimated
  #==(-1) fix selectivity at TRUE value from OM
  #==0    input time-invariant selectivity based on input_survey_selectivity_EM
  #==1    estimated logistic selectivity based on estimated sel_beta1 and sel_beta2 parameters; ph_sel_log_surv must be >0 else fixed at starting values for each parameter
  #==2    estimated double logistic selectivity based on estimated sel_beta1, sel_beta2, sel_beta3, sel_beta4 parameters; ph_sel_log_surv must be >0 AND ph_sel_dubl_surv must be >0 else fixed at starting values for each parameter
          # NOTE: NOT TESTED YET
1

###############################################################################################################################################################################################################
#ph_q
  # phase for survey catchability scalar estimation, used with select_switch_survey_EM==1 OR 2
1

#ph_sel_log_surv
  # phase for survey logistic OR double logistic selectivity estimation, used with select_switch_survey_EM==1 OR 2
4

#ph_sel_dubl_surv
  # phase for survey double logistic selectivity estimation, used with select_switch_survey_EM==2
-5
###############################################################################################################################################################################################################

#F_switch_EM
  # determine how fishing mortality is estimated
  #==0 fix F at TRUE value from OM
  #==1 estimate yearly F by population, region, fleet; ph_F must be >0 else F is fixed at input value in EM
  #==2 estimate F as a random walk; NOTE: NOT IMPLEMENTED DO NOT USE
1

###############################################################################################################################################################################################################
#ph_F
  # phase for fishing mortality estimationn, used with F_switch_EM==1
3

#ph_F_rho
  # (NOT IMPLEMENTED) phase for fishing mortality random walk estimationn, used with F_switch_EM==2
-1
###############################################################################################################################################################################################################

#M_switch_EM
  # determine how natural mortality is estimated
  # NOTE: all M approaches assume M is spatially-invariant within a population (i.e., constant across regions within a population)
  #==(-1) fix M at input age-varying M based on input_M_EM; can differ from TRUE M
  #==0    fix M at TRUE value from OM
  #==1    estimate age+time+space-invariant constant M (const across pop, age, time); ph_M_CNST MUST BE >0 else fixed at starting values for each parameter
  #==2    estimate population-specific, age+time-invariant M (const across ages, time); ph_M_pop_CNST MUST BE >0 else fixed at starting values for each parameter
  #==3    estimate age-varying, pop+time-invariant M (const across pop+time); ph_M_age_CNST MUST BE>0 else fixed at starting values for each parameter
  #==4    estimate age+population-varying, time-invariant M (const across time); ph_M_pop_age MUST BE>0 else fixed at starting values for each parameter
0

###############################################################################################################################################################################################################
#ph_M_CNST
  # phase for estimating age+time+space-invariant constant M (const across pop, age, time), used when M_switch_EM==1
-1

#ph_M_pop_CNST
  # phase for estimating population-specific, age+time-invariant M (const across ages, time), used when M_switch_EM==2
-1

#ph_M_age_CNST
  # phase for estimating age-varying, pop+time-invariant M (const across pop+time), used when M_switch_EM==3
-1

#ph_M_pop_age
  # phase for estimating age+population-varying, time-invariant M (const across time), used when M_switch_EM==4
-1
###############################################################################################################################################################################################################

#init_abund_switch_EM
  # determine whether initial abundance at age in first year is estimated, fixed, or based on exponential decay from Rave
  #==(-2) fix initial abundance at init_abund_EM by pop, reg, age (can differ from TRUE distribution in OM)
  #==(-1) fix initial abundance by pop, reg, age at TRUE values from OM
  #==0    estimate initial abundance at age by population, where R_ave is the age-1 abundance in year 1 (to avoid overparametrization of recruitment); ph_init_abund_no_ag1 MUST BE>0 else fixed at starting values for each parameter
  #==1    estimate initial abundance at age by population where all ages estimated; ph_init_abund MUST BE>0 else fixed at starting values for each parameter
  #==2    initial abundance at age is based on exponential decay with age starting from R_ave (R0) at age-1 and assuming no fishing mortality (i.e., decay based on M only)
     # NOTE: all estimation or derivation (all options except -2 or -1) of init_abund requires distributing init_abund to regions using the est_dist_init_abund_EM switch
1

###############################################################################################################################################################################################################
#ph_init_abund
  # phase for initial abundance estimation where all ages estimated, used when init_abund_switch_EM==1
1
#ph_init_abund_no_ag1
  # phase for initial abundance estimation where age-1 abund fixed at Rave, used when init_abund_switch_EM==0
-1
###############################################################################################################################################################################################################

#est_dist_init_abund_EM
  # determine how initial abundance at age from a natal population is distributed across all populations and regions (natal_homing_switch_EM==1) or across regions within a population (natal_homing_switch_EM==0)
  #==(-2) fix the initial spatial distribution at input_dist_init_abund_EM (can differ from TRUE distribution in OM) (CONSTANT ACROSS AGES)
  #==(-1) equally distribute across regions in a population (no fish start outside natal population)  (CONSTANT ACROSS AGES)
  #==0    fix the initial spatial distribution at TRUE values from OM averaged across ages (CONSTANT ACROSS AGES)
  #==1    fix the initial spatial distribution at TRUE values from OM by age (VARIES ACROSS AGES)
  #==2    estimate the initial spatial distribution (constant across ages), ph_non_natal_init OR ph_reg_init MUST BE >0
          # NOTE: if natal_homing_switch_EM==1, ph_non_natal_init MUST BE >0 and will estimate the distribution of each natal population across all other populations and regions (including regions within natal population); number of parameters==npops*(sum(nregs)-1)
          # NOTE: if natal_homing_switch_EM==0, ph_reg_init MUST BE >0 and will estimate the distribution of each population across all regions within that population; number of parameters==npops*(nregs-1)
             # NOTE: ONLY WORKS CORRECTLY IF # REGIONS IS CONSTANT ACROSS POPULATIONS (SEE README NOTE AT TOP OF DAT FILE)
  #==3    estimate the initial spatial distribution by age, ph_non_natal_age_init OR ph_reg_age_init MUST BE >0
          # NOTE: if natal_homing_switch_EM==1, ph_non_natal_age_init MUST BE >0 and will estimate the distribution of each natal population across all other populations and regions by age (including regions within natal population); number of parameters==npops*(sum(nregs)-1)*nages
          # NOTE: if natal_homing_switch_EM==0, ph_reg_age_init MUST BE >0 and will estimate the distribution of each population across all regions by age within that population; number of parameters==npops*(nregs-1)*nages
             # NOTE: ONLY WORKS CORRECTLY IF # REGIONS IS CONSTANT ACROSS POPULATIONS (SEE README NOTE AT TOP OF DAT FILE)
1

###############################################################################################################################################################################################################
#ph_reg_init
  # phase for estimation of initial distribution of abundance of each population across all regions (CONSTANT BY AGE) within that population (non-natal homing models), used when est_dist_init_abund_EM==2 AND natal_homing_switch_EM==0
-2
#ph_reg_age_init
  # phase for estimation of initial distribution of abundance of each population across all regions and ages within that population (non-natal homing models), used when est_dist_init_abund_EM==3 AND natal_homing_switch_EM==0
-2
#ph_non_natal_init
  # phase for estimation of initial distribution of abundance of each natal population across all other populations and regions (CONSTANT BY AGE) (including regions within natal population; for natal homing models), used when est_dist_init_abund_EM==2 AND natal_homing_switch_EM==1
-1
#ph_non_age_natal_init
  # phase for estimation of initial distribution of abundance of each natal population across all other populations and regions by age (including regions within natal population; for natal homing models), used when est_dist_init_abund_EM==3 AND natal_homing_switch_EM==1
-1
###############################################################################################################################################################################################################

#maturity_switch_equil_EM
  # MORE WORK IS NEEDED TO REFINE THESE CALCULATIONS AND DEAL WITH SPATIAL REFERENCE POITNS!
  # SSB0 must be calculated to determine stock-recruit function
  # Use equilibrium SPR calcs to get SSB0, but to do so requires vital rates (maturity, weight), which are typically constant across a population
  # With multiple regions within a pop each with different vitals, must make assumption regarding the proportional contribution of each region's demograhics to equil SSB
  #==0  equal by region, assume equal (average) contributions to SSB0 by each region
  #==1 weighted average, use input equil_ssb_apportion to determine proportional contribution to equil vital rates by region
0

#SSB_type_EM
  # units of spawning stock biomass
  #==1 fecundity based SSB
  #==2 weight based SSB
2

#Rec_type_EM
  # determines form of Stock-recruit relationship
  #==1 stock-recruit relationship assumes an average value based on estimated R_ave
  #==2 Beverton-Holt stock-recruit functions based on stock-specific estimated steepness, R0 (R_ave)
       # NOTE: SRR DOES NOT TAKE INTO ACCOUNT SPATIAL DYNAMICS (IE, MOVEMENT AMONG POPULATIONS OR REGIONS); SEE README TOPIC AT TOP OF DAT FILE
  #==3 cyclical (sine wave type); HAS NOT YET BEEN IMPLEMENTED
  #==4 (NOT IMPLEMENTED...USE OPTION 2 for BH) Beverton-Holt stock-recruit functions based on stock-specific fixed (at true value) steepness, estimated R0 (R_ave)
  #==5 (NOT IMPLEMENTED...USE OPTION 2 for BH) Beverton-Holt stock-recruit functions based on stock-specific fixed (at true value) steepness and R0 (R_ave) (i.e., both SRR parameters fixed at true values)
  #==6 (NOT IMPLEMENTED...USE OPTION 1 for AVE R) stock-recruit relationship assumes an average value based on fixed (at true value) R_ave
2

###############################################################################################################################################################################################################
#ph_lmr
  # phase for stock-recruit relationship log_mean_recruitment (LMR; or R0, virgin recruitment) estimation, used when Rec_type_EM==1 OR 2 OR 4
  # NOTE: should be negative when  Rec_type_EM==5 OR 6
1

#ph_steep
  # phase for stock-recruit relationship steepness estimation, used when Rec_type_EM==2
  # NOTE: should be negative when  Rec_type_EM==1 OR 4 OR 5 OR 6
-1
###############################################################################################################################################################################################################

#recruit_devs_switch_EM
  # determine whether recruitment deviations are estimated
  #==(-1) fix recruit deviations at TRUE value from OM; make sure to set ph_rec==(-1)
  #==0    use stock-recruit relationship directly (no deviations); make sure to set ph_rec==(-1)
  #==1    estimate recruit deviations assuming lognormal variance around SR curve based on input sigma_recruit_EM; make sure to set ph_rec >0
1

###############################################################################################################################################################################################################
#ph_rec
  # phase for stock-recruit relationship deviations estimation, used when recruit_devs_switch_EM==1
2
###############################################################################################################################################################################################################

#recruit_randwalk_switch_EM
  #==0 no random walk recruitment deviations (DEFAULT)
  #==1 have random walk lognormal recruitment deviations (requires recruit_devs_switch_EM==1)....HAS NOT BEEN FULLY IMPLEMENTED OR TESTED
0

#apportionment_type_EM
  # determines how recruits are apportioned to regions within a population
  # because stock-recruit relationships are assumed only at the population level, if have more than 1 region in a population, must make assumption about how to apportion/assign recruits to each region
  # typically used with EM_structure==1, but also applies if nreg>1 in any pop for EM_structure==2 AND 3
  #==(-2) fix at TRUE values from OM
  #==(-1) fix with no recruitment apportionment to regions within a stock (each region within a stock gets full amount of recruits from SR curve); WOULD NOT SUGGEST USING Because leads to sum(recruits)>SRR
  #==0    fix with apportionment to each region based on relative SSB in region compared to pop SSB
  #==1    fix with yearly apportionment based on input_rec_prop_EM
  #==2    fix with equal apportionment to each region within a population
  #==3    estimate time-invariant apportionment; ph_rec_app_CNST MUST BE >0
  #==4    estimate time-varying apportionment; ph_rec_app_YR MUST BE >0
          # NOTE: THIS HAS NOT BEEN THOROUGHLY TESTED, MAY NOT BE IMPLEMENTED CORRECTLY
-2

###############################################################################################################################################################################################################
#ph_rec_app_CNST
  # phase for time-invariant recruitment apportionment (to region within a population) estimation, used when apportionment_type_EM==3
-4

#ph_rec_app_YR
  # phase for time-varying recruitment apportionment (to region within a population) estimation, used when apportionment_type_EM==4
-4
###############################################################################################################################################################################################################

#use_stock_comp_info_survey_EM
  # Determines whether to fit survey age composition by natal area for maximum likelihood calcs
  #==0 fit OBS survey age comps by pop/area (summed across natal population); assumes no stock compisition data is available; typical for most situations when no genetic/otolith analysis is available
  #==1 fit OBS survey age comps by natal population within each area; assumes stock composition data is available
     # NOTE: NOT YET IMPLEMENTED IN MLE CALCS
0

#use_stock_comp_info_catch_EM
  # Determines whether to fit catch age composition by natal area for maximum likelihood calcs
  #==0 fit OBS catch age comps by pop/area (summed across natal population); assumes no stock compisition data is available; typical for most situations when no genetic/otolith analysis is available
  #==1 fit OBS catch age comps by natal population within each area; assumes stock composition data is available
     # NOTE: NOT YET IMPLEMENTED IN MLE CALCS
0

##############################################################################################################################
############## Tagging Data SWITCHES ########################################################################################
#############################################################################################################################

  ################################################################################################################################################################
  #** Examples of how different tagging scenarios can be used can be found in Goethel et al. (2019); https://www.sciencedirect.com/science/article/pii/S0165783619301675
  ###############################################################################################################################################################

#do_tag_EM
  # determine whether to perform tagging calcs in EM
  #==0 do not calculate tagging data
  #==1 calculate tagging data
1

#tag_fit_ages_switch
   # determines whether tags are fit by age cohorts or by region-only cohorts in the ESTIMATION MODEL
   # the latter is for situations where age is unknown and so assume no tag age dynamics and that all fish fully selected
   # in this case OM assumes normal tagging age-based dynamics, but EM ignores age structure in tags and assumes all tagged fish are fully selected
   # therefore creates inherent process error in tag dynamics because EM uses T, F, M dynamics of fully selected age (error magnified if OM or EM has age-based M or T)
   #==0 fit by age-based cohorts
   #==1 fit by region-based cohorts
0

#est_tag_mixing_switch
   # determines whether EM actually estimates different F or T for tagged fish compared to rest of population in first year of release (i.e., estimate F and/or T to account for  incomplete mixing)
   # leads to match/mismatch between EM and OM depending on sim_tag_mixing_switch AND sim_tag_mixing_T_switch
   # if sim_tag_mixing_T_switch==1 then at least F is simulated assuming incomplete mixing of tagged fish
   # NOTE: EM only setup to est an F scalar between 0 and 1 (i.e., F_tag can only be less than F for incomplete mixing)
   # NOTE: EM not setup to do tag mixing and fit by region based cohorts (i.e., can't use with tag_fit_ages==1)
   #==0 F and T same as rest of pop (assume complete mixing)
      # if sim_tag_mixing_T_switch==0, then this assumes match between OM and EM tag mixing assumptions (no incomplete mixing in either)
      # if sim_tag_mixing_T_switch==1, then this assumes mismatch between OM ane EM in tag mixing assumptions (ie, OM assumes incomplete mixing in at least F, EM assumes complete mixing)
   #==1 F is estimated different from rest of population (incomplete mixing F only) in first year of release, ph_F_tag MUST BE >0; assume same scalar for all pop/reg/fleets (only est by cohort)
   #==2 T is estimated different from rest of population (incomplete mixing T only) in first year of release, ph_T_tag MUST BE >0; assume same scalar for all pop/reg/fleets (only est by cohort)
   #==3 F AND T are estimated different from rest of population (incomplete mixing F AND T) in first year of release, ph_F_tag MUST BE >0 AND ph_T_tag MUST BE >0; assume same scalar for all pop/reg/fleets (only est by cohort)
0

###############################################################################################################################################################################################################
#ph_T_tag
  # phase for movement tag mixing estimation, used with est_tag_mixing_switch==2 OR 3
-7

#ph_F_tag
  # phase for fishing mortality tag mixing estimation, used with est_tag_mixing_switch==1 OR 3
-3
###############################################################################################################################################################################################################

#do_tag_mult_EM
  # determines assumed MLE distribution for fitting tagging data
  #==0 assume negative binomial distribution for tagging data
     # NOTE: NOT YET IMPLEMENTED/TESTED
  #==1 assume multinomial distribution (same as OM) (DEFAULT)
1

#report_rate_switch_EM
  # determines how reporting rate is estimated for tagging data
  # NOTE: if tagging data is not fit in the model make sure all reporting rate phases are negative (not estimated)
  #==(-1) fix based on input_report_rate_EM (reporting rate may differ from TRUE report rate)
  #==0    fix at TRUE values from OM
  #==1    estimate population+region-varying, time-invariant reporting rate; ph_rep_rate_CNST MUST BE >0
  #==2    estimate time-, pop-, reg-varying reporting rate; ph_rep_rate_YR MUST BE >0
0

###################################################################################################################################################################################################################
#ph_rep_rate_CNST
  # phase for reporting rate estimation by population+region, used with report_rate_switch_EM==1
-6

#ph_rep_rate_YR
  # phase for reporting rate estimation by year, used with report_rate_switch_EM==2
-6
##################################################################################################################################################################################################################

#///////////////////////////////////////////////////////////////////////////////
#//////// ADDITIONAL EM PARAMETERS ////////// //////////////////////////////////
#///////////////////////////////////////////////////////////////////////////////

##############################################################################################################################
############## Tagging Data EM Inputs        ################################################################################
#############################################################################################################################

#lb_B
  # lower bound on reporting rate estimate in logit transform space, initial estimate is B_start
-6

#ub_B
  # lower bound on reporting rate estimate in logit transform spacee, initial estimate is B_star
6

#B_start
  # initial estimate for reporting rate in logit transform space
0

#lb_scalar_T
  # lower bound on tag mixing movement rate scalar estimate in logit transform space, initial estimate is T_scalar_start
-10

#ub_scalar_T
  # upper bound on tag mixing movement rate scalar estimate in logit transform space, initial estimate is T_scalar_start
10

#scalar_T_start
  # initial estimate for tag mixing movement rate scalar in logit transform space
0

#lb_scalar_F
  # lower bound on tag mixing fishing mortality scalar estimate in logit transform space, initial estimate is F_scalar_start
-10

#ub_scalar_F
  # upper bound on tag mixing fishing mortality scalar estimate in logit transform space, initial estimate is F_scalar_start
10

#scalar_F_start
  # initial estimate for tag mixing fishing mortality rate scalar in logit transform space
0

#input_report_rate_EM (1,np_em,1,nreg_em)
  # input tag reporting rate for EM which can differ from true reporting rate, not time-varying
  # used with report_rate_switch_EM==(-1)
0.7
0.8

#############################################################################################################################################
######################### Movement Parameter Inputs #########################################################################################
#############################################################################################################################################

#return_probability_EM (1,np_em)
  # probability of return to natal population, used if move_swith_EM==6
1
1

#spawn_return_prob_EM (1,np_em)
  # probability of return to natal population for spawning, used if spawn_return_switch_EM==1
1
1

#T_est_freq
  # defines interval width (ie, yearly time blocks) for movement estimation (number of year movement parameters is nyrs/T_est_freq, rounded up)
  # NOTE: used when move_switch_EM==2 AND ph_T_YR_ALT_FREQ>0 OR ph_T_YR_AGE_ALT_FREQ>0 OR ph_T_YR_AGE_ALT_FREQ_no_AG1>0
  # eg., T_est_freq=2 implies estimating movement in 2 year timeblocks (1 movement parameter for every other year)
1

#T_est_age_freq
  # defines interval width (ie, age time blocks) for movement estimation (number of age parameters is nages/T_age_freq, rounded up)
  # NOTE: used when move_switch_EM==2 AND ph_T_YR_AGE_ALT_FREQ>0 OR ph_T_YR_AGE_ALT_FREQ_no_AG1>0
  # NOTE: IF juv_age HIGHER THAN OLDEST AGE ASSOCIATED WITH 2nd AGE CLASS ESTIMATED PARAMETER THEN WILL HAVE UNUSED MOVEMENT PARAMETERS AND CONVERGENCE ISSUES (e.g., if nages==4, T_est_age_freq=2, and juv_age==4, THEN will est 2 T parameters (=4/2=2) but age-1 T will be applied to all ages, so 2nd T parameter est but not used)
  # eg., T_est_age_freq=1 implies estimating movement for every age; T_est_age_freq=2 implies estimating movement in 2 age timeblocks (ie., for every other age)
2

#juv_age
  # age at/below which all Ts are set to the estimated movement rate for age-1 in that timeblock
  # NOTE: used when move_switch_EM==2 AND ph_T_YR_AGE_ALT_FREQ>0 OR ph_T_YR_AGE_ALT_FREQ_no_AG1>0
2

#lb_T
  # lower bound on movement rate estimate in logit transform space, initial estimate is T_start
-10

#ub_T
  # upper bound on movement rate estimate in logit transform space, initial estimate is T_start
10

#T_start
  # initial estimate for movement parameters in logit transform space
  # NOTE: for 2 pops ==-2 gives ~90% residency, for 3 pops ==-3 gives ~60% residency
-1.25

#input_T_EM (1,np_em,1,nreg_em,1,na,1,np_em,1,nreg_em)
  # age based movement for EM, used when move_switch_EM==(-1); for fixed movement that differs from true movement
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.85 0.15
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75
0.25 0.75

#############################################################################################################################################
######################### Recruitment Parameter Inputs #####################################################################################
#############################################################################################################################################

#tspawn_EM (1,np_em)
  # time of spawning for EM in proportion of year (0-1); 0 is Jan 1st  
0
0

#lb_steep
  # lower bound on steepness parameter estimate, initial estimate is steep_start
0.2

#ub_steep
  # upper bound on steepness parameter estimate, initial estimate is steep_start
1

#steep_start
  # initial estimate for steepness parameter
0.7

#lb_R_ave
  # lower bound on LMR (R0) parameter estimate in log-space, initial estimate is Rave_start
2

#up_R_ave
  # upper bound on LMR (R0) parameter estimate in log-space, initial estimate is Rave_start
20

#Rave_start
  # initial estimate for LMR (R0) parameter in log-space
8.5

#lb_rec_devs
  # lower bound on recruitment deviations estimates in log-space, initial estimate is Rdevs_start
-10

#ub_rec_devs
  # upper bound on recruitment deviations estimates in log-space, initial estimate is Rdevs_start
10

#Rdevs_start
  # initial estimate for recruitment deviations parameters in log-space
0

#lb_rec_app
  # lower bound on recruitment apportionment estimates in logit transform space, initial estimate is Rapp_start
-5

#ub_rec_app
  # upper bound on recruitment apportionment estimates in logit transform space, initial estimate is Rapp_start
5

#Rapp_start
  # initial estimate for recruitment apportionment parameters in logit transform space
0

#rec_prop_em (1,np_em,1,nreg_em,1,nyr)
  # recruit apportionment for EM to each region within a population by year
  # NOTE: used with apportionment_type_EM==1
  # NOTE: must sum to 1.0 across regions, otherwise will scale total recruitment from the stock-recruit curve by the sum
  # NOTE: if OM_structure!=1 AND nregions==1 (for all populations), then set this to 1 for all pops
1	1	1	1	1	1	1	1       1	1	1	1	1	1	1	1       1	1	1	1	1	1	1	1       1	1	1	1	1	1	
1	1	1	1	1	1	1	1       1	1	1	1	1	1	1	1       1	1	1	1	1	1	1	1       1	1	1	1	1	1	

#sigma_rec_em (1,np_em)
  # recruitment variance term defining strength of recruitment deviations when recruit_devs_switch_EM==1
0.55
0.5

#############################################################################################################################################
######################### Fishing Fleet Parameter Inputs ####################################################################################
#############################################################################################################################################

#lb_F
  # lower bound on fishing mortality parameter estimate, initial estimate is F_start
-5

#ub_F
  # upper bound on fishing mortality parameter estimate, initial estimate is F_start
5

#F_start
  # initial estimate for fishing mortality parameter in log-space
-2

#lb_F_rho
  # lower bound on fishing mortality random walk parameter estimate, initial estimate is Frho_start
0

#ub_F_rho
  # upper bound on fishing mortality random walk parameter estimate, initial estimate is Frho_start
1

#Frho_start
  # initial estimate for fishing mortality random walk parameter in log-space
-2

#lb_sel_beta1
  # lower bound on fishery selectivity beta1 parameter estimate, initial estimate is sel_beta1_start
-5

#ub_sel_beta1
  # upper bound on fishery selectivity beta1 parameter estimate, initial estimate is sel_beta1_start
5

#sel_beta1_start
  # initial estimate for fishery selectivity beta1 parameter in log-space
0

#lb_sel_beta2
  # lower bound on fishery selectivity beta2 parameter estimate, initial estimate is sel_beta2_start
-5

#ub_sel_beta2
  # upper bound on fishery selectivity beta2 parameter estimate, initial estimate is sel_beta2_start
5

#sel_beta2_start
  # initial estimate for fishery selectivity beta2 parameter in log-space
0

#lb_sel_beta3
  # lower bound on fishery selectivity beta3 parameter estimate, initial estimate is sel_beta3_start
-5

#ub_sel_beta3
  # upper bound on fishery selectivity beta3 parameter estimate, initial estimate is sel_beta3_start
5

#sel_beta3_start
  # initial estimate for fishery selectivity beta3 parameter in log-space
0

#lb_sel_beta4
  # lower bound on fishery selectivity beta4 parameter estimate, initial estimate is sel_beta4_start
-5

#ub_sel_beta4
  # upper bound on fishery selectivity beta4 parameter estimate, initial estimate is sel_beta4_start
5

#sel_beta4_start
  # initial estimate for fishery selectivity beta4 parameter in log-space
2

#input_selectivity_EM (1,np,1,nreg,1,na,1,nf)
  # fishery selectivity for EM for each population, region, age, and fleet
  # NOTE: used with select_switch_EM==0
0.05	0.1	0.25	.68	.95	.99	1	1
0.01	0.05	0.37	0.84	0.97	1	1	1


#############################################################################################################################################
######################### Survey Fleet Parameter Inputs ######################################################################################
#############################################################################################################################################

#tsurvey_EM (1,np_em,1,nreg_em)
  # time of survey for EM in proportion of year (0-1); 0 is Jan 1st 
0.5
0.5

#lb_q
  # lower bound on survey catchability parameter estimate, initial estimate is q_start
-10

#ub_q
  # upper bound on survey catchability parameter estimate, initial estimate is q_start
5

#q_start
  # initial estimate for survey catchability parameter in log-space
-2

#lb_sel_beta1_surv
  # lower bound on survey selectivity beta1 parameter estimate, initial estimate is sel_beta1_surv_start
-5

#ub_sel_beta1_surv
  # upper bound on survey selectivity beta1 parameter estimate, initial estimate is sel_beta1_surv_start
5

#sel_beta1_surv_start
  # initial estimate for survey selectivity beta1 parameter in log-space
0

#lb_sel_beta2_surv
  # lower bound on survey selectivity beta2 parameter estimate, initial estimate is sel_beta2_surv_start
-5

#ub_sel_beta2_surv
  # upper bound on survey selectivity beta2 parameter estimate, initial estimate is sel_beta2_surv_start
5

#sel_beta2_surv_start
  # initial estimate for survey selectivity beta2 parameter in log-space
0

#lb_sel_beta3_surv
  # lower bound on survey selectivity beta3 parameter estimate, initial estimate is sel_beta3_surv_start
-5

#ub_sel_beta3_surv
  # upper bound on survey selectivity beta3 parameter estimate, initial estimate is sel_beta3_surv_start
5

#sel_beta3_surv_start
  # initial estimate for survey selectivity beta3 parameter in log-space
0

#lb_sel_beta4_surv
  # lower bound on survey selectivity beta4 parameter estimate, initial estimate is sel_beta4_surv_start
-5

#ub_sel_beta4_surv
  # upper bound on survey selectivity beta4 parameter estimate, initial estimate is sel_beta4_surv_start
5

#sel_beta4_surv_start
  # initial estimate for survey selectivity beta4 parameter in log-space
2

#input_survey_selectivity_EM (1,np,1,nreg,1,na,1,nfs)
  # survey selectivity for EM for each population, region, age, and survey fleet
  # NOTE: used with select_switch_survey_EM==0
0.03	0.3	0.75	0.95	1	1	1	1
0.05	0.2	0.69	0.9	1	1	1	1

#############################################################################################################################################
######################### Natural Mortality Parameter Inputs ################################################################################
#############################################################################################################################################

#lb_M
  # lower bound on natural mortality parameter estimate, initial estimate is M_start
-5

#ub_M
  # upper bound on natural mortality parameter estimate, initial estimate is M_start
5

#M_start
  # initial estimate for natural mortality parameter in log-space
-2

#input_M_EM (1,np_em,1,na)
  # natural mortality for EM for each population and age
  # NOTE: used with M_switch_EM==(-1)
0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2
0.25	0.25	0.25	0.25	0.25	0.25	0.25	0.25

#############################################################################################################################################
######################### Other Demographic Parameter Inputs ################################################################################
#############################################################################################################################################

#lb_init_abund
  # lower bound on initial abundance parameter estimates, initial estimate is N_start
-9

#ub_init_abund
  # upper bound on initial abundance parameter estimates, initial estimate is N_start
10

#N_start
  # initial estimate for initial abundance parameters in log-space
8

#lb_init_dist
  # lower bound on initial abundance distribution parameter estimates, initial estimate is init_dist_start
-9

#ub_init_dist
  # upper bound on initial abundance distribution parameter estimates, initial estimate is init_dist_start
10

#init_dist_start
  # initial estimate for initial abundance distribution parameters in logit transform space
0

#init_abund_EM (1,np_em,1,np_em,1,nreg_em,1,na)
  # initial abundance for EM for each natal population across all population and regions by age
  # NOTE: used with init_abund_switch_EM==(-2)
6000	5000	5040	4320	3000	2500	1500	1000
0	0	0	0	0	0	0	0
0	0	0	0	0	0	0	0
4000	3500	4000	3000	1250	1000	900	800

#input_dist_init_abund_EM (1,np_em,1,np_em,1,nreg_em)
  # initial abundance distribution for EM for each  natal population across all population and regions by age
  # NOTE: used when est_dist_init_abund_EM==(-2)
1
0
0
1

#############################################################################################################################################
######################### Likelihood Function Weights and Penalty Function Inputs ###########################################################
#############################################################################################################################################

#################################################################################################################################
### likelihood weights
#################################################################################################################################

#wt_surv
  # maximum likelihood added weight for survey biomass data
1

#wt_catch
  # maximum likelihood added weight for fishery yield data
1

#wt_fish_ag
  # maximum likelihood added weight for fishery age composition data
1

#wt_srv_age
  # maximum likelihood added weight for survey age composition data
1

#wt_tag
  # maximum likelihood added weight for tag recapture data
1

#################################################################################################################################
### penalty function parameters
#################################################################################################################################

#wt_rec
  # maximum likelihood penalty function weight for recruitment deviations from the stock-recruit relationship
  # NOTE: assumes normal penalty based on mean=0 and variance==sigma_recruit_EM
  # NOTE: MUST SET TO 0 to turn off penalty function
1

#Rave_pen_switch
 # determines whether to implement a penalty for R_ave (R0) estimation
 #==0 no Rave penalty
 #==1 implement penalty on R_ave estimation using norm2 to penalize deviations from Rave_mean in log-space, wt_Rave_pen must be >0
1

#wt_Rave_pen
  # maximum likelihood penalty function weight for recruitment R_ave estimation
  # NOTE: used with Rave_pen_switch==1
10

#Rave_mean
  # value of R_ave (R0) against which to penalize deviations from in log-space; used with Rave_pen_switch==1 AND wt_Rave_pen>0
8.5

#R_app_pen_switch
 # determines whether to implement a penalty for recruit apportionment estimation
   # NOTE:  recommended to use, stabilizes apportionment parameter estimates as there are an infinite number of large and small values that can give same actual apportionment rate near bounds due to logit transform
 #==0 no R_app penalty
 #==1 implement penalty on R_app estimation using norm2 to penalize deviations from Tpen in log-space, wt_move_pen must be >0
0

#wt_R_app_pen
  # maximum likelihood penalty function weight for recruit apportionment estimation
  # NOTE: used with R_app_pen_switch==1 OR 2
0.1

#R_app_pen
  # value of ln_recruit_apportionment against which to penalize deviations from in logit transform-space; used with R_app_pen_switch==1  AND wt_R_app_pen>0
  # NOTE: for 2 populations 0 centers apportionment at 50/50 to each region,  -1.5 centers mean on ~80% apportionment to region 1,  and for 3 populations around 70% apportionment
0

#abund_pen_switch
 # determines whether to implement a penalty for initial abundance estimation
 #==0 no initial abundance penalty
 #==1 implement penalty on initial abdundance estimation using norm2 to penalize deviations from mean_N in log-space, wt_abund_pen must be >0
0

#wt_abund_pen
  # maximum likelihood penalty function weight for initial abdundance estimation
  # NOTE: used with abund_pen_switch==1
0.1

#mean_N
  # value of initial abundance against which to penalize deviations from in log-space; used with abund_pen_switch==1 AND wt_abund_pen>0
8

#init_abund_dist_pen_switch
 # determines whether to implement a penalty for initial abundance distribution estimation
 #==0 no initial abundance distribution penalty
 #==1 implement penalty on initial abdundance distribution estimation using norm2 to penalize deviations from mean_N_init in log-space, wt_abund_dist_pen must be >0
0

#wt_abund_dist_pen
  # maximum likelihood penalty function weight for initial abdundance distribution estimation
  # NOTE: used with abund_pen_switch==1
0.1

#mean_N_dist
  # value of initial abundance distribution against which to penalize deviations from in log-space; used with init_abund_dist_pen_switch==1 AND wt_abund_dist_pen>0
     #NOTE: estimated as a logit transform so mean_N_dist==0 is deviations from 50/50 distribution of abundance across 2 regions
0

#move_pen_switch
 # determines whether to implement a penalty for movement estimation
   # NOTE: highly recommended to use, stabilizes movement parameter estimates as there are an infinite number of large and small values that can give same actual movement rate near bounds due to logit transform
 #==0 no movement penalty
 #==1 implement penalty on movement estimation using norm2 to penalize deviations from Tpen in log-space, wt_move_pen must be >0
 #==2 normal penalty based on mean=Tpen and variance==sigma_Tpen_EM
1

#wt_move_pen
  # maximum likelihood penalty function weight for movement estimation
  # NOTE: used with move_pen_switch==1 OR 2
1

#Tpen
  # value of movement against which to penalize deviations from in logit transform-space; used with move_pen_switch==1 OR 2 AND wt_move_pen>0
  # NOTE: for 2 populations -1.5 centers mean on ~80% residency (~20% movement) and for 3 populations around 70% residency (15% movement to each population)
-1.25

#sigma_Tpen_EM
  # movement variance term that controls deviations from Tpen; used when move_pen_switch==2 AND wt_move_pen>0
0.5

#wt_F_pen
  # maximum likelihood penalty function weight for yearly fishing mortality estimates
  # NOTE: uses norm2 to penalize large values of F (i.e., extremely large estimates of fishing mortality)
  # NOTE: MUST SET TO 0 to turn off penalty function
1

#wt_M_pen
  # maximum likelihood penalty function weight for natural mortality estimates
  # NOTE: uses norm2 to penalize large values of M (i.e., extremely large estimates of natural mortality)
  # NOTE: MUST SET TO 0 to turn off penalty function
0

#wt_B_pen 
  # maximum likelihood penalty function weight for tag reporting rate estimates
  # NOTE: assumes normal penalty based on mean=report_rate_ave and variance==report_rate_sigma
  # NOTE: MUST SET TO 0 to turn off penalty function
0

#report_rate_ave
  # value of tag reporting rate against which to penalize deviations from; used with wt_B_pen >0
0.5

#report_rate_sigma
  # tag reporting rate variance term that controls deviations from report_rate_ave; used when wt_B_pen >0
0.1

#############################################################################################################################################
######################### Observation Error Parameter Inputs for EM ##########################################################################
#############################################################################################################################################

################################################################################################################################################################################################################################################################
### NOTE: following inputs control the assumed error structure (i.e., maximum likelihood emphasis) in the EM; these may differ from OM values used
##        to simulate data, but usually should set them equal unless exploring process error in data error assumptions
################################################################################################################################################################################################################################################################

#OBS_survey_fleet_bio_se_EM (1,np_em,1,nreg_em,1,ny,1,nfs_em)
  # assumed lognormal variance for the survey biomass index data
0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2
0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2	0.2

#OBS_yield_fleet_se_EM (1,np_em,1,nreg,1,ny,1,nf_em)
  # assumed lognormal variance for the fishery yield data
0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05
0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05	0.05

#OBS_survey_prop_N_EM (1,np_em,1,nreg_em,1,ny,1,nfs_em)
  # assumed multinomial effective sample size for the survey age composition data
150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150
150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150

#OBS_catch_at_age_fleet_prop_N_EM (1,np_em,1,nreg_em,1,ny,1,nf_EM)
  # assumed multinomial effective sample size for the fishery age composition data
150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150
150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150	150

#tag_N_EM (1,np_em,1,nreg_em,1,ny_rel,1,na)
  # assumed multinomial effective sample size for the tagging data (effective N applies to a given cohort)
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200
200	200	200	200	200	200	200	200

#############################################################################################################################################
######################### Random Number Generator Seed Inputs ###############################################################################
#############################################################################################################################################

################################################################################################################################################################################################################################################################
### NOTE: These values are used to determine the starting point for all random number generators; these should be altered (e.g., in R wrapper) for each sim run (depending on axis of variation desired)
################################################################################################################################################################################################################################################################

#myseed_yield
  # RNG seed for fishery yield observation error
8995

#myseed_survey
  # RNG seed for survey biomass observation error
27653

#myseed_F
  # RNG seed for fishing mortality yearly deviations (stochasticity)
45652

#myseed_rec_devs
  # RNG seed for recruitment yearly deviations (stochasticity)
23441

#myseed_rec_apport
  # RNG seed for recruitment apportionment yearly deviations (stochasticity)
70006

#myseed_rec_index
  # RNG seed for recruitment index observation error
40009

#myseed_survey_age
  # RNG seed for survey age compositions observation error
600006

#myseed_catch_age
  # RNG seed for fishery age compositions observation error
455

#myseed_tag
  # RNG seed for tag recaptures observation error
50000

#myseed_ntags
  # RNG seed for uniform distribution of number of tags; used with number_tags_switch==4:7
1204032

#myseed_prob_tag
  # RNG seed for uniform distribution of probability of tagging by area; used with number_tags_switch==5 OR 7
1917482

#myseed_prob_tag_year
  # RNG seed for uniform distribution of prob of tagging by year; used with number_tags_switch==5:7
7

#myseed_T
  # RNG seed for movement yearly deviations (stochasticity)
33

#############################################################################################################################################
######################### Debug Code to Check that Everything Read In Correctly #############################################################
#############################################################################################################################################

#debug
  # debug number used to double check that parameters have been read in correctly
1541
